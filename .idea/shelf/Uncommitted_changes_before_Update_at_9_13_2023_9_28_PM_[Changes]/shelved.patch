Index: src/employee/Employee.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package employee;\r\nimport admin.Admin;\r\nimport inventory.InventoryActions;\r\nimport product.Product;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport javax.swing.*;\r\nimport javax.swing.event.DocumentEvent;\r\nimport javax.swing.event.DocumentListener;\r\n\r\nimport javax.swing.table.DefaultTableModel;\r\nimport javax.swing.table.TableModel;\r\nimport javax.swing.table.TableRowSorter;\r\nimport java.awt.*;\r\n\r\n\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.sql.*;\r\nimport java.util.Date;\r\n\r\n\r\nimport database.Database;\r\n\r\n\r\n\r\n\r\npublic class Employee extends JFrame{\r\n    Connection connection;\r\n\r\n    EmployeeActions employeeActions;\r\n\r\n    JPanel p1,p2;\r\n    JLabel l1,l2;\r\n    JTextField textField;\r\n    JComboBox Cb;\r\n    JTable T;\r\n    JButton back,add,remove;\r\n    JDialog newEmployee,removeEmployee;\r\n\r\n\r\n    JScrollPane scroll;\r\n    private String firstName,lastName,adress,phoneNumber;\r\n\r\n    private int employee_Id;\r\n\r\n\r\n\r\n    public int getEmployee_Id() {\r\n        return employee_Id;\r\n    }\r\n\r\n    public String getAdress() {\r\n        return adress;\r\n    }\r\n\r\n    public String getFirstName() {\r\n        return firstName;\r\n    }\r\n\r\n    public String getLastName() {\r\n        return lastName;\r\n    }\r\n\r\n    public String getPhoneNumber() {\r\n        return phoneNumber;\r\n    }\r\n\r\n    public void setEmployee_Id(int employee_Id) {\r\n        this.employee_Id = employee_Id;\r\n    }\r\n\r\n    public void setAdress(String adress) {\r\n        this.adress = adress;\r\n    }\r\n\r\n    public void setFirstName(String firstName) {\r\n        this.firstName = firstName;\r\n    }\r\n\r\n    public void setLastName(String lastName) {\r\n        this.lastName = lastName;\r\n    }\r\n\r\n    public void setPhoneNumber(String phoneNumber) {\r\n        this.phoneNumber = phoneNumber;\r\n    }\r\n\r\n\r\n    public Employee()\r\n    {\r\n        Container emp = getContentPane();\r\n        employeeActions= new EmployeeActions();\r\n\r\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\r\n        setSize(800,600);\r\n        setLayout(null);\r\n        setLocationRelativeTo(null);\r\n        setTitle(\"LENNY SUPERMARKET\");\r\n\r\n        connection = Database.connection;\r\n        textField=new JTextField(100);\r\n        textField.setBounds(310,25,300,30);\r\n\r\n\r\n        int count =employeeActions.Count();\r\n        System.out.println(count);\r\n        Employee[] employees= employeeActions.Retrieve(count);\r\n\r\n        Cb= new JComboBox();\r\n        Cb.addItem(\"ID\");\r\n        Cb.addItem(\"Name\");\r\n        Cb.setBounds(200,25,100,30);\r\n        l1 = new JLabel(\"Search item using: \");\r\n        l1.setBounds(50,-10,50,800);\r\n        l1.setForeground(Color.WHITE);\r\n        l1.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n\r\n        String[] cNames = new String[]{\"ID\", \"First Name\", \"Last Name\", \"phone number\", \"adress\"};\r\n\r\n        String [][] Values = new String[count][cNames.length];\r\n        for(int i=0;i<count; i++){\r\n            Values[i][0]= String.valueOf(employees[i].getEmployee_Id());\r\n            Values[i][1]= String.valueOf(employees[i].getFirstName());\r\n            Values[i][2]= String.valueOf(employees[i].getLastName());\r\n            Values[i][3]= String.valueOf(employees[i].getPhoneNumber());\r\n            Values[i][4]= String.valueOf(employees[i].getAdress());\r\n\r\n        }\r\n\r\n        TableModel model= new DefaultTableModel(Values,cNames);\r\n        TableRowSorter sorter=new TableRowSorter(model);\r\n        T= new JTable(model);\r\n        T.setRowSorter(sorter);\r\n        scroll=new JScrollPane(T);\r\n\r\n        textField.getDocument().addDocumentListener(new DocumentListener() {\r\n            @Override\r\n            public void insertUpdate(DocumentEvent e) {\r\n                search(textField.getText());\r\n            }\r\n            @Override\r\n            public void removeUpdate(DocumentEvent e) {\r\n                search(textField.getText());\r\n            }\r\n            @Override\r\n            public void changedUpdate(DocumentEvent e) {\r\n                search(textField.getText());\r\n            }\r\n            public void search(String str) {\r\n                String selected=(String)Cb.getSelectedItem();\r\n                if(selected.equals(\"ID\")){\r\n                    if (str.length() == 0) {\r\n                        sorter.setRowFilter(null);\r\n                    } else {\r\n                        RowFilter rowFilter= RowFilter.regexFilter(textField.getText(),0);\r\n                        sorter.setRowFilter(rowFilter);\r\n                    }\r\n                }else if(selected.equals(\"Name\")){\r\n                    if (str.length() == 0) {\r\n                        sorter.setRowFilter(null);\r\n                    } else {\r\n                        RowFilter rowFilter= RowFilter.regexFilter(textField.getText(),1);\r\n                        sorter.setRowFilter(rowFilter);\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        });\r\n\r\n        back=new JButton(\"Back\");\r\n        back.setBackground(new Color(40,40,40));\r\n        back.setForeground(Color.WHITE);\r\n\r\n        back.setFocusPainted(false);\r\n        back.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        back.addMouseListener(new java.awt.event.MouseAdapter() {\r\n            public void mouseEntered(java.awt.event.MouseEvent evt) {\r\n                back.setBackground(new Color(60,60,60));\r\n            }\r\n\r\n            public void mouseExited(java.awt.event.MouseEvent evt) {\r\n                back.setBackground(new Color(40,40,40));\r\n            }\r\n        });\r\n\r\n        back.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if(e.getSource()==back)\r\n                {\r\n                    dispose();\r\n                    Admin n=new Admin();\r\n                    n.setVisible(true);\r\n                }\r\n\r\n            }\r\n        });\r\n        back.setBounds(10,10,80,20);\r\n\r\n\r\n        add=new JButton(\"Add\");\r\n        add.setBackground(new Color(40,40,40));\r\n        add.setForeground(Color.WHITE);\r\n\r\n        add.setFocusPainted(false);\r\n        add.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        add.addMouseListener(new java.awt.event.MouseAdapter() {\r\n            public void mouseEntered(java.awt.event.MouseEvent evt) {\r\n                add.setBackground(new Color(60,60,60));\r\n            }\r\n\r\n            public void mouseExited(java.awt.event.MouseEvent evt) {\r\n                add.setBackground(new Color(40,40,40));\r\n            }\r\n        });\r\n\r\n        add.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if(e.getSource()==add)\r\n                {\r\n                    newEmployee = new JDialog();\r\n\r\n                    newEmployee.setTitle(\"Add Employee\");\r\n                    newEmployee.setLayout(null);\r\n                    JLabel fn=new JLabel(\"Employee First Name\");\r\n                    fn.setBounds(25,10,200,30);\r\n                    JLabel ln=new JLabel(\"Employee Last Name\");\r\n                    ln.setBounds(25,50,200,30);\r\n                    JLabel pn=new JLabel(\"Employee Phone Number\");\r\n                    pn.setBounds(25,90,200,30);\r\n                    JLabel ad=new JLabel(\"Employee Adress \");\r\n                    ad.setBounds(25,130,200,30);\r\n                    JButton done=new JButton(\"Done\");\r\n\r\n\r\n                    done.setBackground(new Color(40,40,40));\r\n                    done.setForeground(Color.WHITE);\r\n                    done.setFocusPainted(false);\r\n                    done.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n                    done.addMouseListener(new java.awt.event.MouseAdapter() {\r\n                        public void mouseEntered(java.awt.event.MouseEvent evt) {\r\n                            done.setBackground(new Color(60,60,60));\r\n                        }\r\n\r\n                        public void mouseExited(java.awt.event.MouseEvent evt) {\r\n                            done.setBackground(new Color(40,40,40));\r\n                        }\r\n                    });\r\n                    done.addActionListener(new ActionListener() {\r\n                        public void actionPerformed(ActionEvent e) {\r\n                            if(e.getSource()==done)\r\n                            {\r\n                                dispose();\r\n                                Admin n=new Admin();\r\n                                n.setVisible(true);\r\n                            }\r\n                        }\r\n                    });\r\n                    done.setBounds(300,260,100,30);\r\n\r\n\r\n                    JTextField jTextField_fn=new JTextField(20);\r\n                    jTextField_fn.setBounds(225,10,300,30);\r\n                    JTextField jTextField_ln=new JTextField(20);\r\n                    jTextField_ln.setBounds(225,50,300,30);\r\n                    JTextField jTextField_pn=new JTextField(20);\r\n                    jTextField_pn.setBounds(225,90,300,30);\r\n                    JTextField jTextField_ad=new JTextField(20);\r\n                    jTextField_ad.setBounds(225,130,300,30);\r\n\r\n                    newEmployee.add(fn);\r\n                    newEmployee.add(jTextField_fn);\r\n                    newEmployee.add(ln);\r\n                    newEmployee.add(jTextField_ln);\r\n                    newEmployee.add(pn);\r\n                    newEmployee.add(jTextField_pn);\r\n                    newEmployee.add(ad);\r\n                    newEmployee.add(jTextField_ad);\r\n                    newEmployee.add(done);\r\n                    newEmployee.setSize(600, 400);\r\n\r\n\r\n\r\n                    newEmployee.setLocationRelativeTo(null);\r\n                    newEmployee.setVisible(true);\r\n                }\r\n\r\n            }\r\n        });\r\n        add.setBounds(250,390,100,50);\r\n\r\n\r\n        remove=new JButton(\"Remove\");\r\n        remove.setBackground(new Color(40,40,40));\r\n        remove.setForeground(Color.WHITE);\r\n\r\n        remove.setFocusPainted(false);\r\n        remove.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        remove.addMouseListener(new java.awt.event.MouseAdapter() {\r\n            public void mouseEntered(java.awt.event.MouseEvent evt) {\r\n                remove.setBackground(new Color(60,60,60));\r\n            }\r\n\r\n            public void mouseExited(java.awt.event.MouseEvent evt) {\r\n                remove.setBackground(new Color(40,40,40));\r\n            }\r\n        });\r\n\r\n        remove.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if(e.getSource()==remove)\r\n                {\r\n                    removeEmployee = new JDialog();\r\n\r\n                    removeEmployee.setTitle(\"Remove Employee\");\r\n                    removeEmployee.setLayout(null);\r\n                    JLabel fn=new JLabel(\"Employee First Name\");\r\n                    fn.setBounds(25,10,200,30);\r\n                    JLabel ln=new JLabel(\"Employee Last Name\");\r\n                    ln.setBounds(25,50,200,30);\r\n                    JLabel id=new JLabel(\"Employee ID\");\r\n                    id.setBounds(25,90,200,30);\r\n\r\n                    JButton done=new JButton(\"Done\");\r\n\r\n\r\n                    done.setBackground(new Color(40,40,40));\r\n                    done.setForeground(Color.WHITE);\r\n                    done.setFocusPainted(false);\r\n                    done.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n                    done.addMouseListener(new java.awt.event.MouseAdapter() {\r\n                        public void mouseEntered(java.awt.event.MouseEvent evt) {\r\n                            done.setBackground(new Color(60,60,60));\r\n                        }\r\n\r\n                        public void mouseExited(java.awt.event.MouseEvent evt) {\r\n                            done.setBackground(new Color(40,40,40));\r\n                        }\r\n                    });\r\n                    done.addActionListener(new ActionListener() {\r\n                        public void actionPerformed(ActionEvent e) {\r\n                            if(e.getSource()==done)\r\n                            {\r\n                                dispose();\r\n                                Admin n=new Admin();\r\n                                n.setVisible(true);\r\n                            }\r\n                        }\r\n                    });\r\n                    done.setBounds(300,260,100,30);\r\n\r\n\r\n                    JTextField jTextField_fn=new JTextField(20);\r\n                    jTextField_fn.setBounds(225,10,300,30);\r\n                    JTextField jTextField_ln=new JTextField(20);\r\n                    jTextField_ln.setBounds(225,50,300,30);\r\n                    JTextField jTextField_id=new JTextField(20);\r\n                    jTextField_id.setBounds(225,90,300,30);\r\n\r\n\r\n                    removeEmployee.add(fn);\r\n                    removeEmployee.add(jTextField_fn);\r\n                    removeEmployee.add(ln);\r\n                    removeEmployee.add(jTextField_ln);\r\n                    removeEmployee.add(id);\r\n                    removeEmployee.add(jTextField_id);\r\n\r\n                    removeEmployee.add(done);\r\n                    removeEmployee.setSize(600, 400);\r\n\r\n\r\n\r\n                    removeEmployee.setLocationRelativeTo(null);\r\n                    removeEmployee.setVisible(true);\r\n\r\n                }\r\n\r\n            }\r\n        });\r\n        remove.setBounds(450,390,100,50);\r\n\r\n        p1=new JPanel(null){\r\n            private BufferedImage backgroundImage;\r\n\r\n            {\r\n                try {\r\n\r\n                    backgroundImage = ImageIO.read(new File(\"C:/Users/mekon/IdeaProjects/SupermarketManagementSystem/greyImage.jpeg\"));\r\n\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n\r\n            protected void paintComponent(Graphics g) {\r\n                super.paintComponent(g);\r\n\r\n                if (backgroundImage != null) {\r\n                    g.drawImage(backgroundImage, 0, 0, getWidth(), getHeight(), null);\r\n                }\r\n            }\r\n        };\r\n\r\n        p2=new JPanel(null){\r\n            private BufferedImage backgroundImage;\r\n\r\n            {\r\n                try {\r\n\r\n                    backgroundImage = ImageIO.read(new File(\"C:/Users/mekon/IdeaProjects/SupermarketManagementSystem/greyImage.jpeg\"));\r\n\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n\r\n            protected void paintComponent(Graphics g) {\r\n                super.paintComponent(g);\r\n\r\n                if (backgroundImage != null) {\r\n                    g.drawImage(backgroundImage, 0, 0, getWidth(), getHeight(), null);\r\n                }\r\n            }\r\n        };\r\n\r\n        p2.setPreferredSize(new Dimension(600,400));\r\n\r\n        p1.setPreferredSize(new Dimension(600,50));\r\n\r\n\r\n\r\n\r\n\r\n        scroll.setBounds(50,15,700,350);\r\n        scroll.setBackground(Color.WHITE);\r\n\r\n\r\n\r\n\r\n\r\n        p1.add(back);\r\n        p1.add(Cb);\r\n        p1.add(textField);\r\n        p2.add(scroll);\r\n        p2.add(add);\r\n        p2.add(remove);\r\n        setLayout(new BoxLayout(getContentPane(), BoxLayout.Y_AXIS));\r\n        emp.add(p1);\r\n        emp.add(p2);\r\n\r\n    }\r\n    public Employee(int id, String firstName, String lastName,String phoneNumber,String adress) {\r\n        this.firstName = firstName;\r\n        this.employee_Id = id;\r\n        this.lastName = lastName;\r\n        this.phoneNumber = phoneNumber;\r\n        this.adress = adress;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/employee/Employee.java b/src/employee/Employee.java
--- a/src/employee/Employee.java	(revision 295b0513b80e76c66f6c929690d9e9d784974c05)
+++ b/src/employee/Employee.java	(date 1694629589792)
@@ -100,6 +100,7 @@
         setLayout(null);
         setLocationRelativeTo(null);
         setTitle("LENNY SUPERMARKET");
+        setResizable(false);
 
         connection = Database.connection;
         textField=new JTextField(100);
Index: src/sales/Sales.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sales;\r\n\r\nimport database.Database;\r\nimport javax.swing.*;\r\nimport javax.swing.event.DocumentEvent;\r\nimport javax.swing.event.DocumentListener;\r\nimport javax.swing.table.DefaultTableModel;\r\nimport javax.swing.table.TableModel;\r\nimport javax.swing.table.TableRowSorter;\r\nimport java.awt.*;\r\n\r\npublic class Sales extends JFrame {\r\n    SalesActions salesActions;\r\n    JPanel p1, p2;\r\n    JLabel l1, l2, totalSalesLabel;\r\n    JTextField tf, tf2;\r\n    JComboBox Cb;\r\n    JTable T;\r\n    JButton search;\r\n    JScrollPane scroll;\r\n\r\n    public Sales() {\r\n        Container salesContainer = getContentPane();\r\n        salesActions = new SalesActions();\r\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\r\n        setSize(1000,600);\r\n        setLayout(null);\r\n        setLocationRelativeTo(null);\r\n\r\n        tf = new JTextField(100);\r\n        tf2 = new JTextField(100);\r\n\r\n        tf.setBounds(400,0,300,50);\r\n        tf2.setBounds(400,400,300,50);\r\n\r\n        int count = salesActions.Count();\r\n        System.out.println(count);\r\n\r\n        SalesActions[] salesArray = salesActions.Retrieve(count);\r\n\r\n        Cb = new JComboBox();\r\n        l1 = new JLabel(\"Search item using: \");\r\n        search = new JButton(\"search\");\r\n\r\n        String[] cNames = new String[]{\"ID\", \"Date\", \"Quantity\", \"Total Money\"};\r\n\r\n        String[][] Values = new String[count][cNames.length];\r\n        for (int i=0; i<count; i++) {\r\n            Values[i][0] = String.valueOf(salesArray[i].getSalesID());\r\n            Values[i][1] = String.valueOf(salesArray[i].getSalesDate());\r\n            Values[i][2] = String.valueOf(salesArray[i].getSalesQuantity());\r\n            Values[i][3] = String.valueOf(salesArray[i].getTotalMoney());\r\n        }\r\n\r\n        TableModel model= new DefaultTableModel(Values,cNames);\r\n        TableRowSorter sorter=new TableRowSorter(model);\r\n        T= new JTable(model);\r\n        T.setRowSorter(sorter);\r\n\r\n        scroll=new JScrollPane(T);\r\n\r\n        Cb.addItem(\"ID\");\r\n        Cb.addItem(\"Date\");\r\n\r\n        double totalSales = salesActions.calculateTotalSales();\r\n        totalSalesLabel = new JLabel(\"Total Sales: \" + totalSales);\r\n        totalSalesLabel.setBounds(400,450,300,50);\r\n\r\n        tf.getDocument().addDocumentListener(new DocumentListener() {\r\n            @Override\r\n            public void insertUpdate(DocumentEvent e) {\r\n                search(tf.getText());\r\n            }\r\n\r\n            @Override\r\n            public void removeUpdate(DocumentEvent e) {\r\n                search(tf.getText());\r\n            }\r\n\r\n            @Override\r\n            public void changedUpdate(DocumentEvent e) {\r\n                search(tf.getText());\r\n            }\r\n\r\n            private void search(String str){\r\n                String selected=(String)Cb.getSelectedItem();\r\n                if(selected.equals(\"ID\")){\r\n                    if (str.length() == 0) {\r\n                        sorter.setRowFilter(null);\r\n                    } else {\r\n                        RowFilter rowFilter= RowFilter.regexFilter(tf.getText(),0);\r\n                        sorter.setRowFilter(rowFilter);\r\n                    }\r\n                }else if(selected.equals(\"Date\")){\r\n                    if (str.length() == 0) {\r\n                        sorter.setRowFilter(null);\r\n                    } else {\r\n                        RowFilter rowFilter= RowFilter.regexFilter(tf.getText(),1);\r\n                        sorter.setRowFilter(rowFilter);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        scroll.setBounds(450,65,500,150);\r\n        scroll.setBackground(Color.WHITE);\r\n\r\n        salesContainer.add(Cb);\r\n        salesContainer.add(tf);\r\n        salesContainer.add(tf2);\r\n        salesContainer.add(scroll);\r\n        salesContainer.add(totalSalesLabel);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/sales/Sales.java b/src/sales/Sales.java
--- a/src/sales/Sales.java	(revision 295b0513b80e76c66f6c929690d9e9d784974c05)
+++ b/src/sales/Sales.java	(date 1694629589722)
@@ -1,46 +1,91 @@
 package sales;
 
+import admin.Admin;
 import database.Database;
+
+import javax.imageio.ImageIO;
 import javax.swing.*;
 import javax.swing.event.DocumentEvent;
 import javax.swing.event.DocumentListener;
 import javax.swing.table.DefaultTableModel;
-import javax.swing.table.TableModel;
 import javax.swing.table.TableRowSorter;
 import java.awt.*;
+import java.awt.event.ActionEvent;
+import java.awt.event.ActionListener;
+import java.awt.image.BufferedImage;
+import java.io.File;
+import java.io.IOException;
+import java.sql.Connection;
+import java.sql.Date;
 
 public class Sales extends JFrame {
+    Connection connection;
     SalesActions salesActions;
+
     JPanel p1, p2;
-    JLabel l1, l2, totalSalesLabel;
-    JTextField tf, tf2;
+    JLabel l1;
+    JTextField textField;
     JComboBox Cb;
     JTable T;
-    JButton search;
+    JButton back;
     JScrollPane scroll;
+    private int salesID, salesQuantity;
+    private Date salesDate;
+    private Double totalMoney;
+
+    public int getSalesID() {
+        return salesID;
+    }
+
+    public int getSalesQuantity() {
+        return salesQuantity;
+    }
+
+    public Date getSalesDate() {
+        return salesDate;
+    }
+
+    public Double getTotalMoney() {
+        return totalMoney;
+    }
+    public Sales(int salesID, Date salesDate, int salesQuantity, double totalMoney){
+        this.salesDate=salesDate;
+        this.salesID=salesID;
+        this.salesQuantity=salesQuantity;
+        this.totalMoney=totalMoney;
+
+    }
 
     public Sales() {
         Container salesContainer = getContentPane();
         salesActions = new SalesActions();
         setDefaultCloseOperation(EXIT_ON_CLOSE);
-        setSize(1000,600);
+        setSize(800,600);
         setLayout(null);
         setLocationRelativeTo(null);
+        setTitle("LENNY SUPERMARKET");
+        setResizable(false);
 
-        tf = new JTextField(100);
-        tf2 = new JTextField(100);
+        connection=Database.connection;
 
-        tf.setBounds(400,0,300,50);
-        tf2.setBounds(400,400,300,50);
+        textField= new JTextField(100);
+        textField.setBounds(310,25,300,30);
+
 
         int count = salesActions.Count();
         System.out.println(count);
 
-        SalesActions[] salesArray = salesActions.Retrieve(count);
+        Sales[] salesArray = salesActions.Retrieve(count);
 
         Cb = new JComboBox();
+        Cb.addItem("ID");
+        Cb.addItem("Date");
+        Cb.setBounds(200,25,100,30);
+
         l1 = new JLabel("Search item using: ");
-        search = new JButton("search");
+        l1.setBounds(50,-10,50,800);
+        l1.setForeground(Color.WHITE);
+        l1.setFont(new Font("Arial", Font.BOLD, 16));
 
         String[] cNames = new String[]{"ID", "Date", "Quantity", "Total Money"};
 
@@ -52,34 +97,27 @@
             Values[i][3] = String.valueOf(salesArray[i].getTotalMoney());
         }
 
-        TableModel model= new DefaultTableModel(Values,cNames);
+        DefaultTableModel model= new DefaultTableModel(Values,cNames);
         TableRowSorter sorter=new TableRowSorter(model);
         T= new JTable(model);
         T.setRowSorter(sorter);
-
         scroll=new JScrollPane(T);
 
-        Cb.addItem("ID");
-        Cb.addItem("Date");
 
-        double totalSales = salesActions.calculateTotalSales();
-        totalSalesLabel = new JLabel("Total Sales: " + totalSales);
-        totalSalesLabel.setBounds(400,450,300,50);
-
-        tf.getDocument().addDocumentListener(new DocumentListener() {
+        textField.getDocument().addDocumentListener(new DocumentListener() {
             @Override
             public void insertUpdate(DocumentEvent e) {
-                search(tf.getText());
+                search(textField.getText());
             }
 
             @Override
             public void removeUpdate(DocumentEvent e) {
-                search(tf.getText());
+                search(textField.getText());
             }
 
             @Override
             public void changedUpdate(DocumentEvent e) {
-                search(tf.getText());
+                search(textField.getText());
             }
 
             private void search(String str){
@@ -88,27 +126,113 @@
                     if (str.length() == 0) {
                         sorter.setRowFilter(null);
                     } else {
-                        RowFilter rowFilter= RowFilter.regexFilter(tf.getText(),0);
+                        RowFilter rowFilter= RowFilter.regexFilter(textField.getText(),0);
                         sorter.setRowFilter(rowFilter);
                     }
                 }else if(selected.equals("Date")){
                     if (str.length() == 0) {
                         sorter.setRowFilter(null);
                     } else {
-                        RowFilter rowFilter= RowFilter.regexFilter(tf.getText(),1);
+                        RowFilter rowFilter= RowFilter.regexFilter(textField.getText(),1);
                         sorter.setRowFilter(rowFilter);
                     }
                 }
             }
         });
 
-        scroll.setBounds(450,65,500,150);
+
+        back=new JButton("Back");
+        back.setBackground(new Color(40,40,40));
+        back.setForeground(Color.WHITE);
+
+        back.setFocusPainted(false);
+        back.setFont(new Font("Arial", Font.BOLD, 16));
+
+        back.addMouseListener(new java.awt.event.MouseAdapter() {
+            public void mouseEntered(java.awt.event.MouseEvent evt) {
+                back.setBackground(new Color(60,60,60));
+            }
+
+            public void mouseExited(java.awt.event.MouseEvent evt) {
+                back.setBackground(new Color(40,40,40));
+            }
+        });
+
+        back.addActionListener(new ActionListener() {
+            @Override
+            public void actionPerformed(ActionEvent e) {
+                if(e.getSource()==back)
+                {
+                    dispose();
+                    Admin n=new Admin();
+                    n.setVisible(true);
+                }
+
+            }
+        });
+        back.setBounds(10,10,80,20);
+
+        p1=new JPanel(null){
+            private BufferedImage backgroundImage;
+
+            {
+                try {
+
+                    backgroundImage = ImageIO.read(new File("C:/Users/mekon/IdeaProjects/SupermarketManagementSystem/greyImage.jpeg"));
+
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
+            }
+
+            protected void paintComponent(Graphics g) {
+                super.paintComponent(g);
+
+                if (backgroundImage != null) {
+                    g.drawImage(backgroundImage, 0, 0, getWidth(), getHeight(), null);
+                }
+            }
+        };
+
+        p2=new JPanel(null){
+            private BufferedImage backgroundImage;
+
+            {
+                try {
+
+                    backgroundImage = ImageIO.read(new File("C:/Users/mekon/IdeaProjects/SupermarketManagementSystem/greyImage.jpeg"));
+
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
+            }
+
+            protected void paintComponent(Graphics g) {
+                super.paintComponent(g);
+
+                if (backgroundImage != null) {
+                    g.drawImage(backgroundImage, 0, 0, getWidth(), getHeight(), null);
+                }
+            }
+        };
+
+        p2.setPreferredSize(new Dimension(600,400));
+
+        p1.setPreferredSize(new Dimension(600,50));
+
+
+        scroll.setBounds(50,15,700,350);
         scroll.setBackground(Color.WHITE);
 
-        salesContainer.add(Cb);
-        salesContainer.add(tf);
-        salesContainer.add(tf2);
-        salesContainer.add(scroll);
-        salesContainer.add(totalSalesLabel);
+
+
+        p1.add(back);
+        p1.add(Cb);
+        p1.add(textField);
+        p2.add(scroll);
+
+        setLayout(new BoxLayout(getContentPane(), BoxLayout.Y_AXIS));
+        salesContainer.add(p1);
+        salesContainer.add(p2);
     }
 }
Index: src/sales/SalesActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sales;\r\n\r\nimport database.Database;\r\nimport java.sql.Date;\r\nimport java.sql.ResultSet;\r\nimport java.sql.Statement;\r\n\r\npublic class SalesActions {\r\n    private int salesID, salesQuantity;\r\n    private Date salesDate;\r\n    private Double totalMoney;\r\n\r\n    public SalesActions(int salesID, Date salesDate, int salesQuantity, Double totalMoney) {\r\n    }\r\n\r\n    public SalesActions() {\r\n\r\n    }\r\n\r\n    public int getSalesID() {\r\n        return salesID;\r\n    }\r\n\r\n    public int getSalesQuantity() {\r\n        return salesQuantity;\r\n    }\r\n\r\n    public Date getSalesDate() {\r\n        return salesDate;\r\n    }\r\n\r\n    public Double getTotalMoney() {\r\n        return totalMoney;\r\n    }\r\n\r\n    int Count() {\r\n        try {\r\n            Statement stmt = Database.connection.createStatement();\r\n            String query = \"SELECT COUNT(sales_id) FROM sales\";\r\n            ResultSet resultSet = stmt.executeQuery(query);\r\n            while (resultSet.next()){\r\n                return resultSet.getInt(1);\r\n            }\r\n            return 0;\r\n\r\n        } catch (Exception e) {\r\n            System.out.println(e);\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    SalesActions[] Retrieve(int count) {\r\n        int x=0;\r\n        SalesActions[] salesArray = new SalesActions[count];\r\n        try {\r\n            Statement stmt = Database.connection.createStatement();\r\n            String query = \"Select * From sales\";\r\n            ResultSet resultSet = stmt.executeQuery(query);\r\n\r\n            while (resultSet.next()) {\r\n                salesID = resultSet.getInt(1);\r\n                salesDate = resultSet.getDate(2);\r\n                salesQuantity = resultSet.getInt(3);\r\n                totalMoney = resultSet.getDouble(4);\r\n\r\n                SalesActions newSales = new SalesActions(salesID, salesDate, salesQuantity, totalMoney);\r\n                salesArray[x] = newSales;\r\n                x++;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return salesArray;\r\n    }\r\n\r\n    double calculateTotalSales() {\r\n        double totalSales = 0;\r\n        int count = Count();\r\n        SalesActions[] salesArray = Retrieve(count);\r\n        for (SalesActions sale : salesArray) {\r\n            totalSales += sale.getTotalMoney();\r\n        }\r\n        return totalSales;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/sales/SalesActions.java b/src/sales/SalesActions.java
--- a/src/sales/SalesActions.java	(revision 295b0513b80e76c66f6c929690d9e9d784974c05)
+++ b/src/sales/SalesActions.java	(date 1694628013744)
@@ -13,21 +13,11 @@
     public SalesActions(int salesID, Date salesDate, int salesQuantity, Double totalMoney) {
     }
 
+
     public SalesActions() {
 
     }
 
-    public int getSalesID() {
-        return salesID;
-    }
-
-    public int getSalesQuantity() {
-        return salesQuantity;
-    }
-
-    public Date getSalesDate() {
-        return salesDate;
-    }
 
     public Double getTotalMoney() {
         return totalMoney;
@@ -36,7 +26,7 @@
     int Count() {
         try {
             Statement stmt = Database.connection.createStatement();
-            String query = "SELECT COUNT(sales_id) FROM sales";
+            String query = "SELECT COUNT(sale_id) FROM sales";
             ResultSet resultSet = stmt.executeQuery(query);
             while (resultSet.next()){
                 return resultSet.getInt(1);
@@ -49,21 +39,27 @@
         }
     }
 
-    SalesActions[] Retrieve(int count) {
+    Sales[] Retrieve(int count) {
         int x=0;
-        SalesActions[] salesArray = new SalesActions[count];
+        Sales[] salesArray = new Sales[count];
         try {
             Statement stmt = Database.connection.createStatement();
             String query = "Select * From sales";
             ResultSet resultSet = stmt.executeQuery(query);
 
+            System.out.println("Attempt");
+
+            System.out.println("result " + resultSet);
+
+
             while (resultSet.next()) {
                 salesID = resultSet.getInt(1);
                 salesDate = resultSet.getDate(2);
                 salesQuantity = resultSet.getInt(3);
                 totalMoney = resultSet.getDouble(4);
 
-                SalesActions newSales = new SalesActions(salesID, salesDate, salesQuantity, totalMoney);
+                System.out.println(salesID + " " + salesDate + " " + salesQuantity + " " + totalMoney);
+                Sales newSales = new Sales(salesID, salesDate, salesQuantity, totalMoney);
                 salesArray[x] = newSales;
                 x++;
             }
@@ -76,8 +72,8 @@
     double calculateTotalSales() {
         double totalSales = 0;
         int count = Count();
-        SalesActions[] salesArray = Retrieve(count);
-        for (SalesActions sale : salesArray) {
+        Sales[] salesArray = Retrieve(count);
+        for (Sales sale : salesArray) {
             totalSales += sale.getTotalMoney();
         }
         return totalSales;
Index: src/login/Login.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package login;\r\nimport  java.awt.*;\r\nimport javax.imageio.ImageIO;\r\nimport javax.swing.*;\r\nimport java.awt.event.*;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport cashier.*;\r\nimport  admin.*;\r\nimport  sales.*;\r\n\r\npublic class Login extends JFrame{\r\n    JLabel choose;\r\n    JLabel userID;\r\n    JLabel password;\r\n    JTextField idTextField;\r\n    JComboBox userType;\r\n    JPasswordField passwordField;\r\n\r\n    JButton login;\r\n    JButton clear;\r\n    JPanel p1;\r\n    JPanel p2;\r\n\r\n\r\n\r\n    public  Login()\r\n    {\r\n        Container c=getContentPane();\r\n        setSize(650,400);\r\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\r\n        setTitle(\"LENNY SUPERMARKET\");\r\n        setLocationRelativeTo(null);\r\n\r\n        p1=new JPanel(){\r\n            private BufferedImage backgroundImage;\r\n\r\n            {\r\n                try {\r\n\r\n                    backgroundImage = ImageIO.read(new File(\"C:/Users/mekon/IdeaProjects/SupermarketManagementSystem/lenny.png\"));\r\n\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n\r\n            protected void paintComponent(Graphics g) {\r\n                super.paintComponent(g);\r\n\r\n                if (backgroundImage != null) {\r\n                    g.drawImage(backgroundImage, 0, 0, getWidth(), getHeight(), null);\r\n                }\r\n            }\r\n        };\r\n\r\n        p2=new JPanel(){\r\n            private BufferedImage backgroundImage;\r\n\r\n            {\r\n                try {\r\n\r\n                    backgroundImage = ImageIO.read(new File(\"C:/Users/mekon/IdeaProjects/SupermarketManagementSystem/greyImage.jpeg\"));\r\n\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n\r\n            protected void paintComponent(Graphics g) {\r\n                super.paintComponent(g);\r\n\r\n                if (backgroundImage != null) {\r\n                    g.drawImage(backgroundImage, 0, 0, getWidth(), getHeight(), null);\r\n                }\r\n            }\r\n        };\r\n\r\n        p2.setPreferredSize(new Dimension(200,400));\r\n\r\n\r\n\r\n        choose=new JLabel(\"User Type\");\r\n        choose.setForeground(Color.white);\r\n\r\n\r\n        String str[]={\"Admin\",\"User\"};\r\n        userType=new JComboBox(str);\r\n        userType.setBackground(Color.gray);\r\n\r\n        userID=new JLabel(\"User ID\");\r\n        userID.setForeground(Color.white);\r\n        idTextField=new JTextField();\r\n        password=new JLabel(\"password\");\r\n        password.setForeground(Color.white);\r\n\r\n        passwordField=new JPasswordField();\r\n        login=new JButton(\"Login\");\r\n\r\n        login.setBackground(new Color(40,40,40));\r\n        login.setForeground(Color.WHITE);\r\n        login.setFocusPainted(false);\r\n        login.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        login.addMouseListener(new java.awt.event.MouseAdapter() {\r\n            public void mouseEntered(java.awt.event.MouseEvent evt) {\r\n                login.setBackground(new Color(60,60,60));\r\n            }\r\n\r\n            public void mouseExited(java.awt.event.MouseEvent evt) {\r\n                login.setBackground(new Color(40,40,40));\r\n            }\r\n        });\r\n        login.addActionListener(new ActionListener() {\r\n\r\n            public void actionPerformed(ActionEvent e) {\r\n                if(e.getSource()==login&& userType.getSelectedItem()==\"Admin\")\r\n                {\r\n\r\n                    dispose();\r\n                    Admin n=new Admin();\r\n                    n.setVisible(true);\r\n                } else if (e.getSource()==login&& userType.getSelectedItem()==\"User\") {\r\n                    dispose();\r\n                    cashier.Cashier c=new cashier.Cashier();\r\n                    c.setVisible(true);\r\n\r\n                }\r\n            }\r\n        });\r\n        clear=new JButton(\"Clear\");\r\n\r\n        clear.setBackground(new Color(40,40,40));\r\n        clear.setForeground(Color.WHITE);\r\n        clear.setFocusPainted(false);\r\n        clear.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        clear.addMouseListener(new java.awt.event.MouseAdapter() {\r\n            public void mouseEntered(java.awt.event.MouseEvent evt) {\r\n                clear.setBackground(new Color(60,60,60));\r\n            }\r\n\r\n            public void mouseExited(java.awt.event.MouseEvent evt) {\r\n                clear.setBackground(new Color(40,40,40));\r\n            }\r\n        });\r\n\r\n\r\n        p2.setLayout(null);\r\n        choose.setBounds(70,40,200,100);\r\n        userType.setBounds(160,70,200,40);\r\n        userID.setBounds(70,110,200,100);\r\n        idTextField.setBounds(160,140,200,40);\r\n\r\n        password.setBounds(70,180,200,100);\r\n        passwordField.setBounds(160,210,200,40);\r\n\r\n\r\n        login.setBounds(100,280,100,40);\r\n        clear.setBounds(250,280,100,40);\r\n\r\n\r\n\r\n\r\n        p2.add(choose);\r\n        p2.add(userType);\r\n        p2.add(userID);\r\n        p2.add(idTextField);\r\n        p2.add(password);\r\n        p2.add(passwordField);\r\n        p2.add(login);\r\n        p2.add(clear);\r\n\r\n\r\n        setLayout(new BoxLayout(getContentPane(), BoxLayout.X_AXIS));\r\n        c.add(p1);\r\n        c.add(p2);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/login/Login.java b/src/login/Login.java
--- a/src/login/Login.java	(revision 295b0513b80e76c66f6c929690d9e9d784974c05)
+++ b/src/login/Login.java	(date 1694629409566)
@@ -32,6 +32,7 @@
         setDefaultCloseOperation(EXIT_ON_CLOSE);
         setTitle("LENNY SUPERMARKET");
         setLocationRelativeTo(null);
+        setResizable(false);
 
         p1=new JPanel(){
             private BufferedImage backgroundImage;
Index: src/inventory/Inventory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package inventory;\r\nimport employee.EmployeeActions;\r\nimport product.Product;\r\nimport admin.*;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport javax.swing.*;\r\nimport javax.swing.event.DocumentEvent;\r\nimport javax.swing.event.DocumentListener;\r\nimport javax.swing.table.DefaultTableColumnModel;\r\nimport javax.swing.table.DefaultTableModel;\r\nimport javax.swing.table.TableModel;\r\nimport javax.swing.table.TableRowSorter;\r\nimport java.awt.*;\r\n\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.sql.*;\r\n\r\nimport database.Database;\r\npublic class Inventory extends JFrame{\r\n    Connection connection;\r\n    InventoryActions inventoryActions;\r\n\r\n    JLabel l1,l2;\r\n    JTextField textField;\r\n\r\n    JComboBox Cb;\r\n    JTable T;\r\n    JButton back,remove;\r\n    JScrollPane scroll;\r\n    String[] options= {\"ID\",\"Name\"};\r\n    JPanel p1,p2;\r\n    JDialog newItem,removeItem;\r\n\r\n\r\n\r\n    public Inventory(){\r\n        Container inv = getContentPane();\r\n        inventoryActions = new InventoryActions();\r\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\r\n        setSize(800,600);\r\n        setLayout(null);\r\n        setLocationRelativeTo(null);\r\n        setTitle(\"LENNY SUPERMARKET\");\r\n        connection = Database.connection;\r\n        textField=new JTextField(100);\r\n        textField.setBounds(310,25,300,30);\r\n\r\n\r\n\r\n        int count =inventoryActions.Count();\r\n        System.out.println(count);\r\n        Product[] products= inventoryActions.Retrieve(count);\r\n\r\n        Cb= new JComboBox();\r\n        Cb.addItem(\"ID\");\r\n        Cb.addItem(\"Name\");\r\n        Cb.setBounds(200,25,100,30);\r\n        l1 = new JLabel(\"Search item using: \");\r\n        l1.setBounds(50,-10,50,800);\r\n        l1.setForeground(Color.WHITE);\r\n        l1.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n\r\n\r\n        String[] cNames = new String[]{\"ID\", \"Name\", \"Price\", \"Quantity\", \"Exp-Date\", \"Category-ID\"};\r\n\r\n        String [][] Values = new String[count][cNames.length];\r\n        for(int i=0;i<count; i++){\r\n            Values[i][0]= String.valueOf(products[i].getProduct_id());\r\n            Values[i][1]= products[i].getProduct_name();\r\n            Values[i][2]= String.valueOf(products[i].getPrice());\r\n            Values[i][3]= String.valueOf(products[i].getAmount());\r\n            Values[i][4]= String.valueOf(products[i].getDate());\r\n            Values[i][5]= String.valueOf(products[i].getCategory_id());\r\n        }\r\n\r\n        TableModel model= new DefaultTableModel(Values,cNames);\r\n        TableRowSorter sorter=new TableRowSorter(model);\r\n        T= new JTable(model);\r\n        T.setRowSorter(sorter);\r\n        scroll=new JScrollPane(T);\r\n\r\n\r\n        textField.getDocument().addDocumentListener(new DocumentListener() {\r\n            @Override\r\n            public void insertUpdate(DocumentEvent e) {\r\n                search(textField.getText());\r\n            }\r\n\r\n            @Override\r\n            public void removeUpdate(DocumentEvent e) {\r\n                search(textField.getText());\r\n            }\r\n\r\n            @Override\r\n            public void changedUpdate(DocumentEvent e) {\r\n                search(textField.getText());\r\n            }\r\n            private void search(String str){\r\n                String selected=(String)Cb.getSelectedItem();\r\n                if(selected.equals(\"ID\")){\r\n                    if (str.length() == 0) {\r\n                        sorter.setRowFilter(null);\r\n                    } else {\r\n                        RowFilter rowFilter= RowFilter.regexFilter(textField.getText(),0);\r\n                        sorter.setRowFilter(rowFilter);\r\n                    }\r\n                }else if(selected.equals(\"Name\")){\r\n                    if (str.length() == 0) {\r\n                        sorter.setRowFilter(null);\r\n                    } else {\r\n                        RowFilter rowFilter= RowFilter.regexFilter(textField.getText(),1);\r\n                        sorter.setRowFilter(rowFilter);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        back=new JButton(\"Back\");\r\n        back.setBackground(new Color(40,40,40));\r\n        back.setForeground(Color.WHITE);\r\n\r\n        back.setFocusPainted(false);\r\n        back.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        back.addMouseListener(new java.awt.event.MouseAdapter() {\r\n            public void mouseEntered(java.awt.event.MouseEvent evt) {\r\n                back.setBackground(new Color(60,60,60));\r\n            }\r\n\r\n            public void mouseExited(java.awt.event.MouseEvent evt) {\r\n                back.setBackground(new Color(40,40,40));\r\n            }\r\n        });\r\n\r\n        back.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if(e.getSource()==back)\r\n                {\r\n                    dispose();\r\n                    Admin n=new Admin();\r\n                    n.setVisible(true);\r\n                }\r\n\r\n            }\r\n        });\r\n        back.setBounds(10,10,80,20);\r\n\r\n\r\n\r\n        remove=new JButton(\"Remove\");\r\n        remove.setBackground(new Color(40,40,40));\r\n        remove.setForeground(Color.WHITE);\r\n\r\n        remove.setFocusPainted(false);\r\n        remove.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        remove.addMouseListener(new java.awt.event.MouseAdapter() {\r\n            public void mouseEntered(java.awt.event.MouseEvent evt) {\r\n                remove.setBackground(new Color(60,60,60));\r\n            }\r\n\r\n            public void mouseExited(java.awt.event.MouseEvent evt) {\r\n                remove.setBackground(new Color(40,40,40));\r\n            }\r\n        });\r\n\r\n        remove.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if(e.getSource()==remove)\r\n                {\r\n                    removeItem = new JDialog();\r\n\r\n                    removeItem.setTitle(\"Remove Item\");\r\n                    removeItem.setLayout(null);\r\n\r\n                    JLabel name=new JLabel(\"Item name\");\r\n                    name.setBounds(25,10,200,30);\r\n                    JLabel expiredate=new JLabel(\"Item Expiredate\");\r\n                    expiredate.setBounds(25,50,200,30);\r\n                    JLabel category=new JLabel(\"Item Category Id\");\r\n                    category.setBounds(25,90,200,30);\r\n\r\n                    JButton done=new JButton(\"Done\");\r\n\r\n\r\n                    done.setBackground(new Color(40,40,40));\r\n                    done.setForeground(Color.WHITE);\r\n                    done.setFocusPainted(false);\r\n                    done.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n                    done.addMouseListener(new java.awt.event.MouseAdapter() {\r\n                        public void mouseEntered(java.awt.event.MouseEvent evt) {\r\n                            done.setBackground(new Color(60,60,60));\r\n                        }\r\n\r\n                        public void mouseExited(java.awt.event.MouseEvent evt) {\r\n                            done.setBackground(new Color(40,40,40));\r\n                        }\r\n                    });\r\n                    done.addActionListener(new ActionListener() {\r\n                        public void actionPerformed(ActionEvent e) {\r\n                            if(e.getSource()==done)\r\n                            {\r\n                                dispose();\r\n                                Admin n=new Admin();\r\n                                n.setVisible(true);\r\n                            }\r\n                        }\r\n                    });\r\n                    done.setBounds(300,260,100,30);\r\n\r\n\r\n                    JTextField jTextField_name=new JTextField(20);\r\n                    jTextField_name.setBounds(225,10,300,30);\r\n                    JTextField jTextField_expiredate=new JTextField(20);\r\n                    jTextField_expiredate.setBounds(225,50,300,30);\r\n                    JTextField jTextField_categoryId=new JTextField(20);\r\n                    jTextField_categoryId.setBounds(225,90,300,30);\r\n\r\n                    removeItem.add(name);\r\n                    removeItem.add(jTextField_name);\r\n                    removeItem.add(expiredate);\r\n                    removeItem.add(jTextField_expiredate);\r\n                    removeItem.add(category);\r\n                    removeItem.add(jTextField_categoryId);\r\n                    removeItem.add(done);\r\n                    removeItem.setSize(600, 400);\r\n\r\n\r\n\r\n                    removeItem.setLocationRelativeTo(null);\r\n                    removeItem.setVisible(true);\r\n\r\n                }\r\n\r\n            }\r\n        });\r\n        remove.setBounds(350,390,100,50);\r\n\r\n\r\n\r\n        p1=new JPanel(null){\r\n            private BufferedImage backgroundImage;\r\n\r\n            {\r\n                try {\r\n\r\n                    backgroundImage = ImageIO.read(new File(\"C:/Users/mekon/IdeaProjects/SupermarketManagementSystem/greyImage.jpeg\"));\r\n\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n\r\n            protected void paintComponent(Graphics g) {\r\n                super.paintComponent(g);\r\n\r\n                if (backgroundImage != null) {\r\n                    g.drawImage(backgroundImage, 0, 0, getWidth(), getHeight(), null);\r\n                }\r\n            }\r\n        };\r\n\r\n        p2=new JPanel(null){\r\n            private BufferedImage backgroundImage;\r\n\r\n            {\r\n                try {\r\n\r\n                    backgroundImage = ImageIO.read(new File(\"C:/Users/mekon/IdeaProjects/SupermarketManagementSystem/greyImage.jpeg\"));\r\n\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n\r\n            protected void paintComponent(Graphics g) {\r\n                super.paintComponent(g);\r\n\r\n                if (backgroundImage != null) {\r\n                    g.drawImage(backgroundImage, 0, 0, getWidth(), getHeight(), null);\r\n                }\r\n            }\r\n        };\r\n\r\n        p2.setPreferredSize(new Dimension(600,400));\r\n\r\n        p1.setPreferredSize(new Dimension(600,50));\r\n\r\n\r\n\r\n        scroll.setBounds(50,15,700,350);\r\n        scroll.setBackground(Color.WHITE);\r\n        setLayout(new BoxLayout(getContentPane(), BoxLayout.Y_AXIS));\r\n\r\n\r\n        p1.add(back);\r\n        p1.add(Cb);\r\n        p1.add(textField);\r\n        p2.add(scroll);\r\n        p2.add(remove);\r\n        inv.add(p1);\r\n        inv.add(p2);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/inventory/Inventory.java b/src/inventory/Inventory.java
--- a/src/inventory/Inventory.java	(revision 295b0513b80e76c66f6c929690d9e9d784974c05)
+++ b/src/inventory/Inventory.java	(date 1694629589749)
@@ -46,6 +46,7 @@
         setLayout(null);
         setLocationRelativeTo(null);
         setTitle("LENNY SUPERMARKET");
+        setResizable(false);
         connection = Database.connection;
         textField=new JTextField(100);
         textField.setBounds(310,25,300,30);
Index: src/admin/Admin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\npackage admin;\r\nimport employee.Employee;\r\nimport inventory.Inventory;\r\nimport login.*;\r\nimport supplier.*;\r\nimport javax.imageio.ImageIO;\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport sales.*;\r\n\r\n\r\npublic class Admin extends JFrame {\r\n\r\n\r\n    JPanel p1,p2;\r\n    JButton b1,b2,b3,b4,b5,back;\r\n\r\n\r\n\r\n    public  Admin(){\r\n\r\n        Container home=getContentPane();\r\n        setSize(650,400);\r\n        setLayout(null);\r\n        setLocationRelativeTo(null);\r\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\r\n        setTitle(\"LENNY SUPERMARKET\");\r\n\r\n\r\n\r\n        p1=new JPanel()\r\n        {\r\n            private BufferedImage backgroundImage;\r\n\r\n            {\r\n                try {\r\n\r\n                    backgroundImage = ImageIO.read(new File(\"C:/Users/mekon/IdeaProjects/SupermarketManagementSystem/Welcome.png\"));\r\n\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n\r\n            protected void paintComponent(Graphics g) {\r\n                super.paintComponent(g);\r\n\r\n                if (backgroundImage != null) {\r\n                    g.drawImage(backgroundImage, 0, 0, getWidth(), getHeight(), null);\r\n                }\r\n            }\r\n        };\r\n\r\n        p2=new JPanel(null)\r\n        {\r\n            private BufferedImage backgroundImage;\r\n\r\n            {\r\n                try {\r\n\r\n                    backgroundImage = ImageIO.read(new File(\"C:/Users/mekon/IdeaProjects/SupermarketManagementSystem/greyImage.jpeg\"));\r\n\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n\r\n            protected void paintComponent(Graphics g) {\r\n                super.paintComponent(g);\r\n\r\n                if (backgroundImage != null) {\r\n                    g.drawImage(backgroundImage, 0, 0, getWidth(), getHeight(), null);\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n\r\n        p1.setBackground(Color.LIGHT_GRAY);\r\n        p2.setPreferredSize(new Dimension(200,300));\r\n\r\n\r\n        p1.setLayout(null);\r\n        b1=new JButton(\"Inventory\");\r\n        b1.setBackground(new Color(40,40,40));\r\n        b1.setForeground(Color.WHITE);\r\n\r\n        b1.setFocusPainted(false);\r\n        b1.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        b1.addMouseListener(new java.awt.event.MouseAdapter() {\r\n            public void mouseEntered(java.awt.event.MouseEvent evt) {\r\n                b1.setBackground(new Color(60,60,60));\r\n            }\r\n\r\n            public void mouseExited(java.awt.event.MouseEvent evt) {\r\n                b1.setBackground(new Color(40,40,40));\r\n            }\r\n        });\r\n\r\n        b1.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if(e.getSource()==b1)\r\n                {\r\n                    dispose();\r\n                    Inventory inventory=new Inventory();\r\n                    inventory.setVisible(true);\r\n                }\r\n            }\r\n        });\r\n\r\n        b2=new JButton(\"Employees\");\r\n        b2.setBackground(new Color(40,40,40));\r\n        b2.setForeground(Color.WHITE);\r\n\r\n        b2.setFocusPainted(false);\r\n        b2.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        b2.addMouseListener(new java.awt.event.MouseAdapter() {\r\n            public void mouseEntered(java.awt.event.MouseEvent evt) {\r\n                b2.setBackground(new Color(60,60,60));\r\n            }\r\n\r\n            public void mouseExited(java.awt.event.MouseEvent evt) {\r\n                b2.setBackground(new Color(40,40,40));\r\n            }\r\n        });\r\n        b2.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if(e.getSource()==b2)\r\n                {\r\n                    dispose();\r\n                    Employee employee=new Employee();\r\n                    employee.setVisible(true);\r\n                }\r\n            }\r\n        });\r\n\r\n        b3=new JButton(\"sales\");\r\n        b3.setBackground(new Color(40,40,40));\r\n        b3.setForeground(Color.WHITE);\r\n\r\n        b3.setFocusPainted(false);\r\n        b3.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        b3.addMouseListener(new java.awt.event.MouseAdapter() {\r\n            public void mouseEntered(java.awt.event.MouseEvent evt) {\r\n                b3.setBackground(new Color(60,60,60));\r\n            }\r\n\r\n            public void mouseExited(java.awt.event.MouseEvent evt) {\r\n                b3.setBackground(new Color(40,40,40));\r\n            }\r\n        });\r\n\r\n        b3.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if(e.getSource()==b3)\r\n                {\r\n                    dispose();\r\n                    sales.Sales s=new sales.Sales();\r\n                    s.setVisible(true);\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        b4=new JButton(\"Profits\");\r\n        b4.setBackground(new Color(40,40,40));\r\n        b4.setForeground(Color.WHITE);\r\n\r\n        b4.setFocusPainted(false);\r\n        b4.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        b4.addMouseListener(new java.awt.event.MouseAdapter() {\r\n            public void mouseEntered(java.awt.event.MouseEvent evt) {\r\n                b4.setBackground(new Color(60,60,60));\r\n            }\r\n\r\n            public void mouseExited(java.awt.event.MouseEvent evt) {\r\n                b4.setBackground(new Color(40,40,40));\r\n            }\r\n        });\r\n\r\n        b5=new JButton(\"Suppliers\");\r\n        b5.setBackground(new Color(40,40,40));\r\n        b5.setForeground(Color.WHITE);\r\n\r\n        b5.setFocusPainted(false);\r\n        b5.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        b5.addMouseListener(new java.awt.event.MouseAdapter() {\r\n            public void mouseEntered(java.awt.event.MouseEvent evt) {\r\n                b5.setBackground(new Color(60,60,60));\r\n            }\r\n\r\n            public void mouseExited(java.awt.event.MouseEvent evt) {\r\n                b5.setBackground(new Color(40,40,40));\r\n            }\r\n        });\r\n        b5.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if(e.getSource()==b5)\r\n                {\r\n                    dispose();\r\n                    Supplier supplier=new Supplier();\r\n                    supplier.setVisible(true);\r\n                }\r\n            }\r\n        });\r\n\r\n        b4=new JButton(\"Profits\");\r\n        b4.setBackground(new Color(40,40,40));\r\n        b4.setForeground(Color.WHITE);\r\n\r\n        b4.setFocusPainted(false);\r\n        b4.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        b4.addMouseListener(new java.awt.event.MouseAdapter() {\r\n            public void mouseEntered(java.awt.event.MouseEvent evt) {\r\n                b4.setBackground(new Color(60,60,60));\r\n            }\r\n\r\n            public void mouseExited(java.awt.event.MouseEvent evt) {\r\n                b4.setBackground(new Color(40,40,40));\r\n            }\r\n        });\r\n\r\n        back=new JButton(\"Back\");\r\n        back.setBackground(new Color(40,40,40));\r\n        back.setForeground(Color.WHITE);\r\n\r\n        back.setFocusPainted(false);\r\n        back.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        back.addMouseListener(new java.awt.event.MouseAdapter() {\r\n            public void mouseEntered(java.awt.event.MouseEvent evt) {\r\n                back.setBackground(new Color(60,60,60));\r\n            }\r\n\r\n            public void mouseExited(java.awt.event.MouseEvent evt) {\r\n                back.setBackground(new Color(40,40,40));\r\n            }\r\n        });\r\n\r\n        back.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if(e.getSource()==back)\r\n                {\r\n                    dispose();\r\n                    Login n=new Login();\r\n                    n.setVisible(true);\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n\r\n        b1.setBounds(20,50,150,60);\r\n        b2.setBounds(20,170,150,60);\r\n        b3.setBounds(240,50,150,60);\r\n        b4.setBounds(240,170,150,60);\r\n        b5.setBounds(130,270,150,60);\r\n        back.setBounds(10,10,80,20);\r\n\r\n\r\n\r\n        p1.add(back);\r\n        p2.add(b1);\r\n        p2.add(b2);\r\n        p2.add(b3);\r\n        p2.add(b4);\r\n        p2.add(b5);\r\n\r\n\r\n        setLayout(new BoxLayout(getContentPane(), BoxLayout.X_AXIS));\r\n        home.add(p1);\r\n        home.add(p2);\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/admin/Admin.java b/src/admin/Admin.java
--- a/src/admin/Admin.java	(revision 295b0513b80e76c66f6c929690d9e9d784974c05)
+++ b/src/admin/Admin.java	(date 1694629589777)
@@ -13,6 +13,7 @@
 import java.io.File;
 import java.io.IOException;
 import sales.*;
+import profit.*;
 
 
 public class Admin extends JFrame {
@@ -32,6 +33,7 @@
         setDefaultCloseOperation(EXIT_ON_CLOSE);
         setTitle("LENNY SUPERMARKET");
 
+        setResizable(false);
 
 
         p1=new JPanel()
@@ -144,7 +146,7 @@
             }
         });
 
-        b3=new JButton("sales");
+        b3=new JButton("Sales");
         b3.setBackground(new Color(40,40,40));
         b3.setForeground(Color.WHITE);
 
@@ -167,14 +169,14 @@
                 if(e.getSource()==b3)
                 {
                     dispose();
-                    sales.Sales s=new sales.Sales();
+                    Sales s=new Sales();
                     s.setVisible(true);
 
                 }
             }
         });
 
-        b4=new JButton("Profits");
+        b4=new JButton("Profit");
         b4.setBackground(new Color(40,40,40));
         b4.setForeground(Color.WHITE);
 
@@ -191,6 +193,21 @@
             }
         });
 
+        b4.addActionListener(new ActionListener() {
+            @Override
+            public void actionPerformed(ActionEvent e) {
+                if(e.getSource()==b4)
+                {
+                    Profit p=new Profit();
+
+                    p.setVisible(true);
+
+
+                }
+            }
+        });
+
+
         b5=new JButton("Suppliers");
         b5.setBackground(new Color(40,40,40));
         b5.setForeground(Color.WHITE);
@@ -219,23 +236,6 @@
             }
         });
 
-        b4=new JButton("Profits");
-        b4.setBackground(new Color(40,40,40));
-        b4.setForeground(Color.WHITE);
-
-        b4.setFocusPainted(false);
-        b4.setFont(new Font("Arial", Font.BOLD, 16));
-
-        b4.addMouseListener(new java.awt.event.MouseAdapter() {
-            public void mouseEntered(java.awt.event.MouseEvent evt) {
-                b4.setBackground(new Color(60,60,60));
-            }
-
-            public void mouseExited(java.awt.event.MouseEvent evt) {
-                b4.setBackground(new Color(40,40,40));
-            }
-        });
-
         back=new JButton("Back");
         back.setBackground(new Color(40,40,40));
         back.setForeground(Color.WHITE);
Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import sales.Sales;\r\nimport database.Database;\r\nimport  login.*;\r\n\r\npublic class Main {\r\n\r\n\r\n    public static void main(String[] args) {\r\n        Login l=new Login();\r\n        l.setVisible(true);\r\n\r\n        Database database =new  Database(\"localhost\",\"SuperMarket\",\"sa\",\"Nani2239\");\r\n        database.instantiate();\r\n\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Main.java b/src/Main.java
--- a/src/Main.java	(revision 295b0513b80e76c66f6c929690d9e9d784974c05)
+++ b/src/Main.java	(date 1694628266173)
@@ -1,3 +1,4 @@
+import profit.Profit;
 import sales.Sales;
 import database.Database;
 import  login.*;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"d72dfc20-d9fd-433d-8297-8215fe9c5c62\" name=\"Changes\" comment=\"Third Commit\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/admin/Admin.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/admin/Admin.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/sales/Sales.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/sales/Sales.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/sales/SalesActions.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/sales/SalesActions.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/supplier/Supplier.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/supplier/Supplier.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_TAGS\">\r\n      <GitPushTagMode>\r\n        <option name=\"argument\" value=\"--tags\" />\r\n        <option name=\"title\" value=\"All\" />\r\n      </GitPushTagMode>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2VFRDXAfurToGERraEyCh7hpd24\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/mekon/IdeaProjects/supermarket&quot;,\r\n    &quot;onboarding.tips.debug.path&quot;: &quot;C:/Users/Nahom Mekonnen/IdeaProjects/SuperMarketManagementSystem/src/Main.java&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"d72dfc20-d9fd-433d-8297-8215fe9c5c62\" name=\"Changes\" comment=\"\" />\r\n      <created>1694429725009</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1694429725009</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"First Commit\">\r\n      <created>1694429925749</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694429925749</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Third Commit\">\r\n      <created>1694431359986</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694431359986</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Third Commit\">\r\n      <created>1694431632314</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694431632314</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Third Commit\">\r\n      <created>1694431708337</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694431708337</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Third Commit\">\r\n      <created>1694431859721</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694431859721</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Third Commit\">\r\n      <created>1694432185170</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694432185170</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Third Commit\">\r\n      <created>1694456574225</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694456574225</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Third Commit\">\r\n      <created>1694458071694</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694458071694</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"gui commit\">\r\n      <created>1694502527439</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694502527439</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"gui2 commit\">\r\n      <created>1694502632773</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694502632773</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"gui2 commit\">\r\n      <created>1694506147571</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694506147571</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"gui2 commit\">\r\n      <created>1694547383643</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694547383643</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"gui2 commit\">\r\n      <created>1694547391394</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694547391394</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"gui2 commit\">\r\n      <created>1694547491807</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694547491807</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"gui2 commit\">\r\n      <created>1694549839904</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694549839904</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"gui2 commit\">\r\n      <created>1694553826302</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694553826302</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"Third Commit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1694625314761</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694625314761</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"18\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"First Commit\" />\r\n    <MESSAGE value=\"gui commit\" />\r\n    <MESSAGE value=\"gui2 commit\" />\r\n    <MESSAGE value=\"Third Commit\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Third Commit\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"com.microsoft.sqlserver.jdbc.SQLServerException\" package=\"com.microsoft.sqlserver.jdbc\" />\r\n          <option name=\"timeStamp\" value=\"2\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/SupermarketManagementSystem$Unnamed.ic\" NAME=\"Unnamed Coverage Results\" MODIFIED=\"1694504150044\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 295b0513b80e76c66f6c929690d9e9d784974c05)
+++ b/.idea/workspace.xml	(date 1694629589904)
@@ -4,13 +4,18 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="d72dfc20-d9fd-433d-8297-8215fe9c5c62" name="Changes" comment="Third Commit">
+    <list default="true" id="d72dfc20-d9fd-433d-8297-8215fe9c5c62" name="Changes" comment="yetefa commit">
+      <change afterPath="$PROJECT_DIR$/src/profit/Profit.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/profit/ProfitActions.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/admin/Admin.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/admin/Admin.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/cashier/Cashier.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/cashier/Cashier.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/employee/Employee.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/employee/Employee.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/inventory/Inventory.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/inventory/Inventory.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/login/Login.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/login/Login.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/sales/Sales.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/sales/Sales.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/sales/SalesActions.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/sales/SalesActions.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/supplier/Supplier.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/supplier/Supplier.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -52,7 +57,7 @@
     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
     &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
     &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/mekon/IdeaProjects/supermarket&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/mekon/IdeaProjects/SupermarketManagementSystem&quot;,
     &quot;onboarding.tips.debug.path&quot;: &quot;C:/Users/Nahom Mekonnen/IdeaProjects/SuperMarketManagementSystem/src/Main.java&quot;,
     &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
     &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
@@ -180,15 +185,21 @@
       <option name="project" value="LOCAL" />
       <updated>1694553826302</updated>
     </task>
-    <task id="LOCAL-00017" summary="Third Commit">
-      <option name="closed" value="true" />
-      <created>1694625314761</created>
+    <task id="LOCAL-00017" summary="gui2 commit">
+      <created>1694624293406</created>
       <option name="number" value="00017" />
       <option name="presentableId" value="LOCAL-00017" />
       <option name="project" value="LOCAL" />
-      <updated>1694625314761</updated>
+      <updated>1694624293406</updated>
+    </task>
+    <task id="LOCAL-00018" summary="yetefa commit">
+      <created>1694624453508</created>
+      <option name="number" value="00018" />
+      <option name="presentableId" value="LOCAL-00018" />
+      <option name="project" value="LOCAL" />
+      <updated>1694624453508</updated>
     </task>
-    <option name="localTasksCounter" value="18" />
+    <option name="localTasksCounter" value="19" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -205,10 +216,11 @@
   <component name="VcsManagerConfiguration">
     <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
     <MESSAGE value="First Commit" />
+    <MESSAGE value="Third Commit" />
     <MESSAGE value="gui commit" />
     <MESSAGE value="gui2 commit" />
-    <MESSAGE value="Third Commit" />
-    <option name="LAST_COMMIT_MESSAGE" value="Third Commit" />
+    <MESSAGE value="yetefa commit" />
+    <option name="LAST_COMMIT_MESSAGE" value="yetefa commit" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
@@ -216,6 +228,10 @@
         <breakpoint enabled="true" type="java-exception">
           <properties class="com.microsoft.sqlserver.jdbc.SQLServerException" package="com.microsoft.sqlserver.jdbc" />
           <option name="timeStamp" value="2" />
+        </breakpoint>
+        <breakpoint enabled="true" type="java-exception">
+          <properties class="java.lang.ArrayIndexOutOfBoundsException" package="java.lang" />
+          <option name="timeStamp" value="4" />
         </breakpoint>
       </breakpoints>
     </breakpoint-manager>
Index: src/profit/Profit.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/profit/Profit.java b/src/profit/Profit.java
new file mode 100644
--- /dev/null	(date 1694629589731)
+++ b/src/profit/Profit.java	(date 1694629589731)
@@ -0,0 +1,25 @@
+package profit;
+
+import javax.swing.*;
+import java.awt.*;
+
+public class Profit extends JFrame {
+    ProfitActions profitActions;
+    JLabel profitLabel;
+
+    public Profit() {
+        Container profitContainer = getContentPane();
+        profitActions = new ProfitActions();
+        setDefaultCloseOperation(EXIT_ON_CLOSE);
+        setSize(400,200);
+        setLayout(null);
+        setLocationRelativeTo(null);
+        setResizable(false);
+
+        double profit = profitActions.calculateProfit();
+        profitLabel = new JLabel("Total Profit: " + profit);
+        profitLabel.setBounds(50,50,300,50);
+
+        profitContainer.add(profitLabel);
+    }
+}
Index: src/profit/ProfitActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/profit/ProfitActions.java b/src/profit/ProfitActions.java
new file mode 100644
--- /dev/null	(date 1694627058434)
+++ b/src/profit/ProfitActions.java	(date 1694627058434)
@@ -0,0 +1,29 @@
+package profit;
+
+import database.Database;
+import java.sql.ResultSet;
+import java.sql.Statement;
+
+public class ProfitActions {
+    private double totalSales;
+    private final double TOTAL_SALARIES = 9000.0; // we can replace this with the actual total salaries
+
+    double calculateTotalSales() {
+        try {
+            Statement stmt = Database.connection.createStatement();
+            String query = "SELECT SUM(total_amount) FROM sales";
+            ResultSet resultSet = stmt.executeQuery(query);
+            while (resultSet.next()){
+                return resultSet.getDouble(1);
+            }
+        } catch (Exception e) {
+            System.out.println(e);
+        }
+        return 0;
+    }
+
+    double calculateProfit() {
+        totalSales = calculateTotalSales();
+        return totalSales - TOTAL_SALARIES;
+    }
+}
Index: src/cashier/Cashier.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cashier;\r\nimport admin.Admin;\r\nimport database.Database;\r\nimport login.*;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.sql.Connection;\r\n\r\nimport static jdk.jfr.internal.StringPool.reset;\r\n\r\n//public class Cashier extends JFrame implements ActionListener {\r\n//\r\n//\r\n//    private Inventory inventory;\r\n//\r\n//\r\n//    private Customer customer;\r\n//\r\n//\r\n//    private double total;\r\n//\r\n//\r\n//    private int items;\r\n//\r\n//    // GUI components\r\n//    private JLabel welcomeLabel;\r\n//    private JButton newCustomerButton;\r\n//    private JButton existingCustomerButton;\r\n//    private JLabel customerLabel;\r\n//    private JButton viewInventoryButton;\r\n//    private JButton buyItemButton;\r\n//    private JButton checkoutButton;\r\n//    private JLabel purchaseLabel;\r\n//    private JTextArea purchaseArea;\r\n//    private JLabel totalLabel;\r\n//    private JLabel pointsLabel;\r\n//\r\n//\r\n//    public Cashier() {\r\n//        inventory = new Inventory();\r\n//        customer = null;\r\n//        total = 0.0;\r\n//        items = 0;\r\n//\r\n//\r\n//        welcomeLabel = new JLabel(\"Welcome to Supermarket System\");\r\n//        newCustomerButton = new JButton(\"New Customer\");\r\n//        existingCustomerButton = new JButton(\"Existing Customer\");\r\n//        customerLabel = new JLabel(\"No customer selected\");\r\n//        viewInventoryButton = new JButton(\"View Inventory\");\r\n//        buyItemButton = new JButton(\"Buy Item\");\r\n//        checkoutButton = new JButton(\"Checkout\");\r\n//        purchaseLabel = new JLabel(\"Current Purchase:\");\r\n//        purchaseArea = new JTextArea(10, 20);\r\n//        totalLabel = new JLabel(\"Total: $0.00\");\r\n//        pointsLabel = new JLabel(\"Points: 0\");\r\n//\r\n//\r\n//        newCustomerButton.addActionListener(this);\r\n//        existingCustomerButton.addActionListener(this);\r\n//        viewInventoryButton.addActionListener(this);\r\n//        buyItemButton.addActionListener(this);\r\n//        checkoutButton.addActionListener(this);\r\n//\r\n//\r\n//        JPanel topPanel = new JPanel();\r\n//        topPanel.setLayout(new GridLayout(2, 2));\r\n//        topPanel.add(welcomeLabel);\r\n//        topPanel.add(newCustomerButton);\r\n//        topPanel.add(existingCustomerButton);\r\n//        topPanel.add(customerLabel);\r\n//\r\n//\r\n//        JPanel middlePanel = new JPanel();\r\n//        middlePanel.setLayout(new GridLayout(1, 3));\r\n//        middlePanel.add(viewInventoryButton);\r\n//        middlePanel.add(buyItemButton);\r\n//        middlePanel.add(checkoutButton);\r\n//\r\n//        JPanel bottomPanel = new JPanel();\r\n//        bottomPanel.setLayout(new BorderLayout());\r\n//        bottomPanel.add(purchaseLabel, BorderLayout.NORTH);\r\n//        bottomPanel.add(new JScrollPane(purchaseArea), BorderLayout.CENTER);\r\n//        bottomPanel.add(totalLabel, BorderLayout.SOUTH);\r\n//\r\n//\r\n//        JPanel rightPanel = new JPanel();\r\n//        rightPanel.setLayout(new GridLayout(2, 1));\r\n//        rightPanel.add(pointsLabel);\r\n//\r\n//\r\n//        setTitle(\"Cashier\");\r\n//        setLayout(new BorderLayout());\r\n//        add(topPanel, BorderLayout.NORTH);\r\n//        add(middlePanel, BorderLayout.CENTER);\r\n//        add(bottomPanel, BorderLayout.WEST);\r\n//        add(rightPanel, BorderLayout.EAST);\r\n//        pack();\r\n//        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n//        setVisible(true);\r\n//    }\r\n//\r\n//    public void actionPerformed(ActionEvent e) {\r\n//        Object source = e.getSource();\r\n//        if (source == newCustomerButton) {\r\n//            createNewCustomer();\r\n//        } else if (source == existingCustomerButton) {\r\n//            selectExistingCustomer();\r\n//        } else if (source == viewInventoryButton) {\r\n//            viewInventory();\r\n//        } else if (source == buyItemButton) {\r\n//            buyItem();\r\n//        } else if (source == checkoutButton) {\r\n//            checkout();\r\n//        }\r\n//    }\r\n//\r\n//\r\n//    public void createNewCustomer() {\r\n//        // TODO: we add a dialog box that asks for the name and phone number of the customer and creates a new Customer object with those parameters\r\n//\r\n//    }\r\n//\r\n//\r\n//    public void selectExistingCustomer() {\r\n//        // TODO: we must add some sorta variable that stores all the customers, such as an array, and a dialog box that allows the cashier to choose one of them\r\n//\r\n//    }\r\n//\r\n//\r\n//\r\n//\r\n//    public void buyItem() {\r\n//        if (customer == null) {\r\n//            JOptionPane.showMessageDialog(this, \"Please select or create a customer first.\");\r\n//            return;\r\n//        }\r\n//\r\n//        String name = JOptionPane.showInputDialog(this, \"Enter the name of the item you want to buy:\");\r\n//        Item item = inventory.findItem(name);\r\n//\r\n//        if (item == null) {\r\n//            JOptionPane.showMessageDialog(this, \"Sorry, we could not find this item in our inventory. Please try again.\");\r\n//            return;\r\n//        }\r\n//\r\n//        int quantity = Integer.parseInt(JOptionPane.showInputDialog(this, \"Enter how many units of \" + name + \" you want to buy:\"));\r\n//\r\n//        if (quantity <= 0) {\r\n//            JOptionPane.showMessageDialog(this, \"Please enter a positive number.\");\r\n//            return;\r\n//        }\r\n//\r\n//        if (quantity > item.getQuantity()) {\r\n//            JOptionPane.showMessageDialog(this, \"Sorry, we only have \" + item.getQuantity() + \" units of \" + name + \" left. Please enter a smaller number.\");\r\n//            return;\r\n//        }\r\n//\r\n//        double price = item.getPrice();\r\n//        double subtotal = price * quantity;\r\n//        total += subtotal;\r\n//        items += quantity;\r\n//        inventory.updateItem(name, -quantity);\r\n//        customer.addPoints((int) subtotal);\r\n//\r\n//        purchaseArea.append(name + \"\\t\" + quantity + \"\\t\" + price + \"\\t\" + subtotal + \"\\n\");\r\n//        totalLabel.setText(\"Total: $\" + String.format(\"%.2f\", total));\r\n//        pointsLabel.setText(\"Points: \" + customer.getPoints());\r\n//    }\r\n//\r\n//\r\n//\r\n//\r\n//    public void checkout() {\r\n//        if (customer == null) { // Chekc if there is a customer selected\r\n//            JOptionPane.showMessageDialog(this, \"Please select or create a customer first.\");\r\n//            return;\r\n//        }\r\n//\r\n//        if (items == 0) { // Check if there are any items purchased\r\n//            JOptionPane.showMessageDialog(this, \"Please buy some items first.\");\r\n//            return;\r\n//        }\r\n//\r\n//        double tax = total * 0.15;\r\n//        double grandTotal = total + tax;\r\n//\r\n//        JFrame receiptFrame = new JFrame(\"Receipt\");\r\n//        JTextArea receiptArea = new JTextArea(20, 30);\r\n//        receiptArea.setEditable(false);\r\n//\r\n//        receiptArea.append(\"Supermarket System\\n\"); // Append the name of the system to the receipt area\r\n//        receiptArea.append(\"Customer: \" + customer.getName() + \"\\n\"); // Append the name of the customer to the receipt area\r\n//        receiptArea.append(\"Phone: \" + customer.getPhone() + \"\\n\");\r\n//        receiptArea.append(\"Points: \" + customer.getPoints() + \"\\n\");\r\n//        receiptArea.append(\"Items purchased: \" + items + \"\\n\");\r\n//        receiptArea.append(\"Subtotal: $\" + String.format(\"%.2f\", total) + \"\\n\");\r\n//        receiptArea.append(\"Tax: $\" + String.format(\"%.2f\", tax) + \"\\n\");\r\n//        receiptArea.append(\"Grand Total: $\" + String.format(\"%.2f\", grandTotal) + \"\\n\");\r\n//\r\n//        receiptFrame.add(new JScrollPane(receiptArea));\r\n//        receiptFrame.pack();\r\n//        receiptFrame.setVisible(true);\r\n//\r\n//        reset(); //resets the cashier object for a new purchase\r\n//    }\r\n//}\r\npublic class Cashier extends JFrame{\r\n    JLabel itemId,itemName,quantity,singlePrice,totalPrice;\r\n    Connection connection;\r\n\r\n    JSpinner ammount;\r\n    JTextField itemIdTextField,itemNameTextField,price,singlePriceTextField,totalPriceTextField;\r\n\r\n    JButton add,print,clear,back;\r\n    JTextArea textArea;\r\n    JPanel p1;\r\n    JPanel p2;\r\n    JDialog receipt;\r\n\r\n    public Cashier()\r\n    {\r\n        Container cash=getContentPane();\r\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\r\n        setSize(800,600);\r\n        setLayout(null);\r\n        setLocationRelativeTo(null);\r\n\r\n        connection= Database.connection;\r\n\r\n        itemId=new JLabel(\"Item Id: \");\r\n\r\n        itemId.setBounds(10,60,100,20);\r\n        itemId.setForeground(Color.WHITE);\r\n        itemId.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n\r\n        itemName=new JLabel(\"Item Name: \");\r\n\r\n        itemName.setBounds(10,90,100,20);\r\n        itemName.setForeground(Color.WHITE);\r\n        itemName.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n\r\n        singlePrice=new JLabel(\"Single Price: \");\r\n        singlePrice.setBounds(10,120 ,140,20);\r\n        singlePrice.setForeground(Color.WHITE);\r\n        singlePrice.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        singlePriceTextField=new JTextField();\r\n        singlePriceTextField.setBounds(160,120,100,20);\r\n\r\n\r\n        quantity=new JLabel(\"Quantity: \");\r\n\r\n        quantity.setBounds(10,150 ,100,20);\r\n        quantity.setForeground(Color.WHITE);\r\n        quantity.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n\r\n\r\n        itemIdTextField=new JTextField();\r\n        itemIdTextField.setBounds(160,60,200,20);\r\n\r\n        itemNameTextField=new JTextField();\r\n        itemNameTextField.setBounds(160,90,200,20);\r\n\r\n        SpinnerNumberModel model=new SpinnerNumberModel(1,1,500,1);\r\n\r\n        ammount=new JSpinner(model);\r\n        ammount.setBounds(160,150,50,20);\r\n\r\n\r\n        totalPrice=new JLabel(\"Total Price: \");\r\n\r\n        totalPrice.setBounds(10,180 ,100,20);\r\n        totalPrice.setForeground(Color.WHITE);\r\n        totalPrice.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        price=new JTextField();\r\n        price.setBounds(160,180,100,20);\r\n\r\n        add=new JButton(\"Add\");\r\n        add.setBounds(130,240,100,30);\r\n        add.setBackground(new Color(40,40,40));\r\n        add.setForeground(Color.WHITE);\r\n\r\n        add.setFocusPainted(false);\r\n        add.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        add.addMouseListener(new java.awt.event.MouseAdapter() {\r\n            public void mouseEntered(java.awt.event.MouseEvent evt) {\r\n                add.setBackground(new Color(60,60,60));\r\n            }\r\n\r\n            public void mouseExited(java.awt.event.MouseEvent evt) {\r\n                add.setBackground(new Color(40,40,40));\r\n            }\r\n        });\r\n\r\n\r\n\r\n        print=new JButton(\"Print\");\r\n        print.setBounds(90,490,100,30);\r\n        print.setBackground(new Color(40,40,40));\r\n        print.setForeground(Color.WHITE);\r\n\r\n        print.setFocusPainted(false);\r\n        print.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        print.addMouseListener(new java.awt.event.MouseAdapter() {\r\n            public void mouseEntered(java.awt.event.MouseEvent evt) {\r\n                print.setBackground(new Color(60,60,60));\r\n            }\r\n\r\n            public void mouseExited(java.awt.event.MouseEvent evt) {\r\n                print.setBackground(new Color(40,40,40));\r\n            }\r\n        });\r\n\r\n        print.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if(e.getSource()==print)\r\n                {\r\n                    receipt=new JDialog();\r\n                    receipt.setTitle(\"Receipt\");\r\n                    receipt.setSize(400,600);\r\n                    receipt.setVisible(true);\r\n                    receipt.setLocationRelativeTo(null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        clear=new JButton(\"Clear\");\r\n        clear.setBounds(200,490,100,30);\r\n        clear.setBackground(new Color(40,40,40));\r\n        clear.setForeground(Color.WHITE);\r\n        clear.setFocusPainted(false);\r\n        clear.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        clear.addMouseListener(new java.awt.event.MouseAdapter() {\r\n            public void mouseEntered(java.awt.event.MouseEvent evt) {\r\n                clear.setBackground(new Color(60,60,60));\r\n            }\r\n\r\n            public void mouseExited(java.awt.event.MouseEvent evt) {\r\n                clear.setBackground(new Color(40,40,40));\r\n            }\r\n        });\r\n\r\n\r\n\r\n        back=new JButton(\"Back\");\r\n        back.setBackground(new Color(40,40,40));\r\n        back.setForeground(Color.WHITE);\r\n\r\n        back.setFocusPainted(false);\r\n        back.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        back.addMouseListener(new java.awt.event.MouseAdapter() {\r\n            public void mouseEntered(java.awt.event.MouseEvent evt) {\r\n                back.setBackground(new Color(60,60,60));\r\n            }\r\n\r\n            public void mouseExited(java.awt.event.MouseEvent evt) {\r\n                back.setBackground(new Color(40,40,40));\r\n            }\r\n        });\r\n\r\n        back.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if(e.getSource()==back)\r\n                {\r\n                    dispose();\r\n\r\n                    Login l=new Login();\r\n                    l.setVisible(true);\r\n                }\r\n\r\n            }\r\n        });\r\n        back.setBounds(10,10,80,20);\r\n\r\n\r\n\r\n        textArea=new JTextArea(10,20);\r\n        textArea.setBounds(20,20,380,450);\r\n\r\n\r\n\r\n\r\n        p1=new JPanel(null){\r\n            private BufferedImage backgroundImage;\r\n\r\n            {\r\n                try {\r\n\r\n                    backgroundImage = ImageIO.read(new File(\"C:/Users/mekon/IdeaProjects/SupermarketManagementSystem/greyImage.jpeg\"));\r\n\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n\r\n            protected void paintComponent(Graphics g) {\r\n                super.paintComponent(g);\r\n\r\n                if (backgroundImage != null) {\r\n                    g.drawImage(backgroundImage, 0, 0, getWidth(), getHeight(), null);\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n        p2=new JPanel(null){\r\n            private BufferedImage backgroundImage;\r\n\r\n            {\r\n                try {\r\n\r\n                    backgroundImage = ImageIO.read(new File(\"C:/Users/mekon/IdeaProjects/SupermarketManagementSystem/greyImage.jpeg\"));\r\n\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n\r\n            protected void paintComponent(Graphics g) {\r\n                super.paintComponent(g);\r\n\r\n                if (backgroundImage != null) {\r\n                    g.drawImage(backgroundImage, 0, 0, getWidth(), getHeight(), null);\r\n                }\r\n            }\r\n        };\r\n        p2.setPreferredSize(new Dimension(50,600));\r\n\r\n\r\n        setLayout(new BoxLayout(getContentPane(), BoxLayout.X_AXIS));\r\n\r\n\r\n\r\n        p1.add(itemId);\r\n        p1.add(itemIdTextField);\r\n        p1.add(itemName);\r\n        p1.add(itemNameTextField);\r\n        p1.add(singlePrice);\r\n        p1.add(singlePriceTextField);\r\n        p1.add(quantity);\r\n        p1.add(ammount);\r\n        p1.add(totalPrice);\r\n        p1.add(price);\r\n        p1.add(add);\r\n        p1.add(back);\r\n        p2.add(textArea);\r\n        p2.add(print);\r\n        p2.add(clear);\r\n        cash.add(p1);\r\n        cash.add(p2);\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/cashier/Cashier.java b/src/cashier/Cashier.java
--- a/src/cashier/Cashier.java	(revision 295b0513b80e76c66f6c929690d9e9d784974c05)
+++ b/src/cashier/Cashier.java	(date 1694629589764)
@@ -231,6 +231,7 @@
         setSize(800,600);
         setLayout(null);
         setLocationRelativeTo(null);
+        setResizable(false);
 
         connection= Database.connection;
 
