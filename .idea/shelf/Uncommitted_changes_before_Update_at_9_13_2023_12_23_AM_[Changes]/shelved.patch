Index: src/employee/Employee.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package employee;\r\nimport inventory.InventoryActions;\r\nimport product.Product;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport javax.swing.*;\r\nimport javax.swing.event.DocumentEvent;\r\nimport javax.swing.event.DocumentListener;\r\n\r\nimport javax.swing.table.DefaultTableModel;\r\nimport javax.swing.table.TableModel;\r\nimport javax.swing.table.TableRowSorter;\r\nimport java.awt.*;\r\n\r\n\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.sql.*;\r\nimport java.util.Date;\r\n\r\n\r\nimport database.Database;\r\n\r\n\r\n\r\n\r\npublic class Employee extends JFrame{\r\n    Connection connection;\r\n\r\n    EmployeeActions employeeActions;\r\n\r\n    JPanel p1,p2;\r\n    JLabel l1,l2;\r\n    JTextField textField,textField2;\r\n    JComboBox Cb;\r\n    JTable T;\r\n\r\n\r\n    JScrollPane scroll;\r\n    String[] options= {\"ID\",\"Name\"};\r\n    private String firstName,lastName,adress,phoneNumber;\r\n\r\n    private int employee_Id;\r\n\r\n\r\n\r\n    public int getEmployee_Id() {\r\n        return employee_Id;\r\n    }\r\n\r\n    public String getAdress() {\r\n        return adress;\r\n    }\r\n\r\n    public String getFirstName() {\r\n        return firstName;\r\n    }\r\n\r\n    public String getLastName() {\r\n        return lastName;\r\n    }\r\n\r\n    public String getPhoneNumber() {\r\n        return phoneNumber;\r\n    }\r\n\r\n    public void setEmployee_Id(int employee_Id) {\r\n        this.employee_Id = employee_Id;\r\n    }\r\n\r\n    public void setAdress(String adress) {\r\n        this.adress = adress;\r\n    }\r\n\r\n    public void setFirstName(String firstName) {\r\n        this.firstName = firstName;\r\n    }\r\n\r\n    public void setLastName(String lastName) {\r\n        this.lastName = lastName;\r\n    }\r\n\r\n    public void setPhoneNumber(String phoneNumber) {\r\n        this.phoneNumber = phoneNumber;\r\n    }\r\n\r\n\r\n    public Employee()\r\n    {\r\n        Container emp = getContentPane();\r\n         employeeActions= new EmployeeActions();\r\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\r\n        setSize(800,600);\r\n        setLayout(null);\r\n        setLocationRelativeTo(null);\r\n        setTitle(\"LENNY SUPERMARKET\");\r\n        connection = Database.connection;\r\n        textField=new JTextField(100);\r\n        textField.setBounds(310,25,300,30);\r\n        textField2=new JTextField(100);\r\n        textField2.setBounds(310,65,300,30);\r\n\r\n        int count =employeeActions.Count();\r\n        System.out.println(count);\r\n        Employee[] employees= employeeActions.Retrieve(count);\r\n\r\n        Cb= new JComboBox(options);\r\n        l1 = new JLabel(\"Search employee using name: \");\r\n        l1.setBounds(50,-10,200,100);\r\n        l1.setForeground(Color.WHITE);\r\n        l1.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        l2=new JLabel(\"Search employee using Id: \");\r\n        l2.setBounds(50,30,200,100);\r\n        l2.setForeground(Color.WHITE);\r\n        l2.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        String[] cNames = new String[]{\"ID\", \"employee_firstName\", \"employee_lastName\", \"employee_phone_number\", \"employee_address\"};\r\n\r\n        String [][] Values = new String[count][cNames.length];\r\n        for(int i=0;i<count; i++){\r\n            Values[i][0]= String.valueOf(employees[i].getEmployee_Id());\r\n            Values[i][1]= String.valueOf(employees[i].getFirstName());\r\n            Values[i][2]= String.valueOf(employees[i].getLastName());\r\n            Values[i][3]= String.valueOf(employees[i].getPhoneNumber());\r\n            Values[i][4]= String.valueOf(employees[i].getAdress());\r\n\r\n        }\r\n\r\n        TableModel model= new DefaultTableModel(Values,cNames);\r\n        TableRowSorter sorter=new TableRowSorter(model);\r\n        T= new JTable(model);\r\n        T.setRowSorter(sorter);\r\n        scroll=new JScrollPane(T);\r\n\r\n        textField.getDocument().addDocumentListener(new DocumentListener() {\r\n            @Override\r\n            public void insertUpdate(DocumentEvent e) {\r\n                search(textField.getText());\r\n            }\r\n            @Override\r\n            public void removeUpdate(DocumentEvent e) {\r\n                search(textField.getText());\r\n            }\r\n            @Override\r\n            public void changedUpdate(DocumentEvent e) {\r\n                search(textField.getText());\r\n            }\r\n            public void search(String str) {\r\n                if (str.length() == 0) {\r\n                    sorter.setRowFilter(null);\r\n                } else {\r\n                    RowFilter rowFilter= RowFilter.regexFilter(textField.getText(),1);\r\n                    sorter.setRowFilter(RowFilter.regexFilter(str));\r\n                }\r\n            }\r\n\r\n\r\n        });\r\n        textField2.getDocument().addDocumentListener(new DocumentListener() {\r\n            @Override\r\n            public void insertUpdate(DocumentEvent e) {\r\n                search(textField2.getText());\r\n            }\r\n            @Override\r\n            public void removeUpdate(DocumentEvent e) {\r\n                search(textField2.getText());\r\n            }\r\n            @Override\r\n            public void changedUpdate(DocumentEvent e) {\r\n                search(textField2.getText());\r\n            }\r\n            public void search(String str) {\r\n                if (str.length() == 0) {\r\n                    sorter.setRowFilter(null);\r\n                } else {\r\n                    RowFilter rowFilter= RowFilter.regexFilter(textField2.getText(),0);\r\n                    sorter.setRowFilter(rowFilter);\r\n                }\r\n            }\r\n        });\r\n        p1=new JPanel(null){\r\n            private BufferedImage backgroundImage;\r\n\r\n            {\r\n                try {\r\n\r\n                    backgroundImage = ImageIO.read(new File(\"C:/Users/mekon/IdeaProjects/SupermarketManagementSystem/greyImage.jpeg\"));\r\n\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n\r\n            protected void paintComponent(Graphics g) {\r\n                super.paintComponent(g);\r\n\r\n                if (backgroundImage != null) {\r\n                    g.drawImage(backgroundImage, 0, 0, getWidth(), getHeight(), null);\r\n                }\r\n            }\r\n        };\r\n\r\n        p2=new JPanel(){\r\n            private BufferedImage backgroundImage;\r\n\r\n            {\r\n                try {\r\n\r\n                    backgroundImage = ImageIO.read(new File(\"C:/Users/mekon/IdeaProjects/SupermarketManagementSystem/greyImage.jpeg\"));\r\n\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n\r\n            protected void paintComponent(Graphics g) {\r\n                super.paintComponent(g);\r\n\r\n                if (backgroundImage != null) {\r\n                    g.drawImage(backgroundImage, 0, 0, getWidth(), getHeight(), null);\r\n                }\r\n            }\r\n        };\r\n\r\n        p2.setPreferredSize(new Dimension(600,400));\r\n\r\n        p1.setPreferredSize(new Dimension(600,50));\r\n\r\n\r\n\r\n\r\n\r\n        scroll.setBounds(450,65,500,150);\r\n        scroll.setBackground(Color.WHITE);\r\n\r\n\r\n\r\n\r\n\r\n        p1.add(l1);\r\n        p1.add(textField);\r\n        p1.add(l2);\r\n        p1.add(textField2);\r\n        p2.add(scroll);\r\n        setLayout(new BoxLayout(getContentPane(), BoxLayout.Y_AXIS));\r\n        emp.add(p1);\r\n        emp.add(p2);\r\n\r\n    }\r\n    public Employee(int id, String firstName, String lastName,String phoneNumber,String adress) {\r\n        this.firstName = firstName;\r\n        this.employee_Id = id;\r\n        this.lastName = lastName;\r\n        this.phoneNumber = phoneNumber;\r\n        this.adress = adress;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/employee/Employee.java b/src/employee/Employee.java
--- a/src/employee/Employee.java	(revision 958bd6a04260d5febec95c0cd128fc39e460356e)
+++ b/src/employee/Employee.java	(date 1694553517505)
@@ -1,4 +1,5 @@
 package employee;
+import admin.Admin;
 import inventory.InventoryActions;
 import product.Product;
 
@@ -13,6 +14,8 @@
 import java.awt.*;
 
 
+import java.awt.event.ActionEvent;
+import java.awt.event.ActionListener;
 import java.awt.image.BufferedImage;
 import java.io.File;
 import java.io.IOException;
@@ -32,9 +35,10 @@
 
     JPanel p1,p2;
     JLabel l1,l2;
-    JTextField textField,textField2;
+    JTextField textField;
     JComboBox Cb;
     JTable T;
+    JButton back,add,remove;
 
 
     JScrollPane scroll;
@@ -98,25 +102,23 @@
         connection = Database.connection;
         textField=new JTextField(100);
         textField.setBounds(310,25,300,30);
-        textField2=new JTextField(100);
-        textField2.setBounds(310,65,300,30);
+
 
         int count =employeeActions.Count();
         System.out.println(count);
         Employee[] employees= employeeActions.Retrieve(count);
 
-        Cb= new JComboBox(options);
-        l1 = new JLabel("Search employee using name: ");
-        l1.setBounds(50,-10,200,100);
+        Cb= new JComboBox();
+        Cb.addItem("ID");
+        Cb.addItem("Name");
+        Cb.setBounds(200,25,100,30);
+        l1 = new JLabel("Search item using: ");
+        l1.setBounds(50,-10,50,800);
         l1.setForeground(Color.WHITE);
         l1.setFont(new Font("Arial", Font.BOLD, 16));
 
-        l2=new JLabel("Search employee using Id: ");
-        l2.setBounds(50,30,200,100);
-        l2.setForeground(Color.WHITE);
-        l2.setFont(new Font("Arial", Font.BOLD, 16));
 
-        String[] cNames = new String[]{"ID", "employee_firstName", "employee_lastName", "employee_phone_number", "employee_address"};
+        String[] cNames = new String[]{"ID", "First Name", "Last Name", "phone number", "adress"};
 
         String [][] Values = new String[count][cNames.length];
         for(int i=0;i<count; i++){
@@ -148,38 +150,122 @@
                 search(textField.getText());
             }
             public void search(String str) {
-                if (str.length() == 0) {
-                    sorter.setRowFilter(null);
-                } else {
-                    RowFilter rowFilter= RowFilter.regexFilter(textField.getText(),1);
-                    sorter.setRowFilter(RowFilter.regexFilter(str));
+                String selected=(String)Cb.getSelectedItem();
+                if(selected.equals("ID")){
+                    if (str.length() == 0) {
+                        sorter.setRowFilter(null);
+                    } else {
+                        RowFilter rowFilter= RowFilter.regexFilter(textField.getText(),0);
+                        sorter.setRowFilter(rowFilter);
+                    }
+                }else if(selected.equals("Name")){
+                    if (str.length() == 0) {
+                        sorter.setRowFilter(null);
+                    } else {
+                        RowFilter rowFilter= RowFilter.regexFilter(textField.getText(),1);
+                        sorter.setRowFilter(rowFilter);
+                    }
                 }
             }
 
 
         });
-        textField2.getDocument().addDocumentListener(new DocumentListener() {
+
+        back=new JButton("Back");
+        back.setBackground(new Color(40,40,40));
+        back.setForeground(Color.WHITE);
+
+        back.setFocusPainted(false);
+        back.setFont(new Font("Arial", Font.BOLD, 16));
+
+        back.addMouseListener(new java.awt.event.MouseAdapter() {
+            public void mouseEntered(java.awt.event.MouseEvent evt) {
+                back.setBackground(new Color(60,60,60));
+            }
+
+            public void mouseExited(java.awt.event.MouseEvent evt) {
+                back.setBackground(new Color(40,40,40));
+            }
+        });
+
+        back.addActionListener(new ActionListener() {
             @Override
-            public void insertUpdate(DocumentEvent e) {
-                search(textField2.getText());
+            public void actionPerformed(ActionEvent e) {
+                if(e.getSource()==back)
+                {
+                    dispose();
+                    Admin n=new Admin();
+                    n.setVisible(true);
+                }
+
             }
+        });
+        back.setBounds(10,10,80,20);
+
+
+        add=new JButton("Add");
+        add.setBackground(new Color(40,40,40));
+        add.setForeground(Color.WHITE);
+
+        add.setFocusPainted(false);
+        add.setFont(new Font("Arial", Font.BOLD, 16));
+
+        add.addMouseListener(new java.awt.event.MouseAdapter() {
+            public void mouseEntered(java.awt.event.MouseEvent evt) {
+                add.setBackground(new Color(60,60,60));
+            }
+
+            public void mouseExited(java.awt.event.MouseEvent evt) {
+                add.setBackground(new Color(40,40,40));
+            }
+        });
+
+        add.addActionListener(new ActionListener() {
             @Override
-            public void removeUpdate(DocumentEvent e) {
-                search(textField2.getText());
+            public void actionPerformed(ActionEvent e) {
+                if(e.getSource()==add)
+                {
+                    dispose();
+                    Admin n=new Admin();
+                    n.setVisible(true);
+                }
+
             }
+        });
+        add.setBounds(250,390,100,50);
+        //scroll.setBounds(50,15,700,350);
+
+        remove=new JButton("Remove");
+        remove.setBackground(new Color(40,40,40));
+        remove.setForeground(Color.WHITE);
+
+        remove.setFocusPainted(false);
+        remove.setFont(new Font("Arial", Font.BOLD, 16));
+
+        remove.addMouseListener(new java.awt.event.MouseAdapter() {
+            public void mouseEntered(java.awt.event.MouseEvent evt) {
+                remove.setBackground(new Color(60,60,60));
+            }
+
+            public void mouseExited(java.awt.event.MouseEvent evt) {
+                remove.setBackground(new Color(40,40,40));
+            }
+        });
+
+        remove.addActionListener(new ActionListener() {
             @Override
-            public void changedUpdate(DocumentEvent e) {
-                search(textField2.getText());
-            }
-            public void search(String str) {
-                if (str.length() == 0) {
-                    sorter.setRowFilter(null);
-                } else {
-                    RowFilter rowFilter= RowFilter.regexFilter(textField2.getText(),0);
-                    sorter.setRowFilter(rowFilter);
+            public void actionPerformed(ActionEvent e) {
+                if(e.getSource()==remove)
+                {
+                    dispose();
+                    Admin n=new Admin();
+                    n.setVisible(true);
                 }
+
             }
         });
+        remove.setBounds(450,390,100,50);
+
         p1=new JPanel(null){
             private BufferedImage backgroundImage;
 
@@ -202,7 +288,7 @@
             }
         };
 
-        p2=new JPanel(){
+        p2=new JPanel(null){
             private BufferedImage backgroundImage;
 
             {
@@ -232,18 +318,19 @@
 
 
 
-        scroll.setBounds(450,65,500,150);
+        scroll.setBounds(50,15,700,350);
         scroll.setBackground(Color.WHITE);
 
 
 
 
 
-        p1.add(l1);
+        p1.add(back);
+        p1.add(Cb);
         p1.add(textField);
-        p1.add(l2);
-        p1.add(textField2);
         p2.add(scroll);
+        p2.add(add);
+        p2.add(remove);
         setLayout(new BoxLayout(getContentPane(), BoxLayout.Y_AXIS));
         emp.add(p1);
         emp.add(p2);
Index: src/inventory/Inventory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package inventory;\r\nimport employee.EmployeeActions;\r\nimport product.Product;\r\nimport admin.*;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport javax.swing.*;\r\nimport javax.swing.event.DocumentEvent;\r\nimport javax.swing.event.DocumentListener;\r\nimport javax.swing.table.DefaultTableColumnModel;\r\nimport javax.swing.table.DefaultTableModel;\r\nimport javax.swing.table.TableModel;\r\nimport javax.swing.table.TableRowSorter;\r\nimport java.awt.*;\r\n\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.sql.*;\r\n\r\nimport database.Database;\r\npublic class Inventory extends JFrame{\r\n    Connection connection;\r\n    InventoryActions inventoryActions;\r\n\r\n    JLabel l1,l2;\r\n    JTextField textField;\r\n\r\n    JComboBox Cb;\r\n    JTable T;\r\n    JButton back;\r\n    JScrollPane scroll;\r\n    String[] options= {\"ID\",\"Name\"};\r\n    JPanel p1,p2;\r\n\r\n\r\n\r\n    public Inventory(){\r\n        Container Inv = getContentPane();\r\n        inventoryActions = new InventoryActions();\r\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\r\n        setSize(800,600);\r\n        setLayout(null);\r\n        setLocationRelativeTo(null);\r\n        setTitle(\"LENNY SUPERMARKET\");\r\n        connection = Database.connection;\r\n        textField=new JTextField(100);\r\n        textField.setBounds(310,25,300,30);\r\n\r\n\r\n\r\n        int count =inventoryActions.Count();\r\n        System.out.println(count);\r\n        Product[] products= inventoryActions.Retrieve(count);\r\n\r\n        Cb= new JComboBox();\r\n        Cb.addItem(\"ID\");\r\n        Cb.addItem(\"Name\");\r\n        Cb.setBounds(200,25,100,30);\r\n        l1 = new JLabel(\"Search item using: \");\r\n        l1.setBounds(50,-10,50,800);\r\n        l1.setForeground(Color.WHITE);\r\n        l1.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n\r\n\r\n        String[] cNames = new String[]{\"ID\", \"Name\", \"Price\", \"Quantity\", \"Exp-Date\", \"Category-ID\"};\r\n\r\n        String [][] Values = new String[count][cNames.length];\r\n        for(int i=0;i<count; i++){\r\n            Values[i][0]= String.valueOf(products[i].getProduct_id());\r\n            Values[i][1]= products[i].getProduct_name();\r\n            Values[i][2]= String.valueOf(products[i].getPrice());\r\n            Values[i][3]= String.valueOf(products[i].getAmount());\r\n            Values[i][4]= String.valueOf(products[i].getDate());\r\n            Values[i][5]= String.valueOf(products[i].getCategory_id());\r\n        }\r\n\r\n        TableModel model= new DefaultTableModel(Values,cNames);\r\n        TableRowSorter sorter=new TableRowSorter(model);\r\n        T= new JTable(model);\r\n        T.setRowSorter(sorter);\r\n        scroll=new JScrollPane(T);\r\n\r\n\r\n        textField.getDocument().addDocumentListener(new DocumentListener() {\r\n            @Override\r\n            public void insertUpdate(DocumentEvent e) {\r\n                    search(textField.getText());\r\n            }\r\n\r\n            @Override\r\n            public void removeUpdate(DocumentEvent e) {\r\n                    search(textField.getText());\r\n            }\r\n\r\n            @Override\r\n            public void changedUpdate(DocumentEvent e) {\r\n                    search(textField.getText());\r\n            }\r\n            private void search(String str){\r\n                String selected=(String)Cb.getSelectedItem();\r\n                if(selected.equals(\"ID\")){\r\n                    if (str.length() == 0) {\r\n                        sorter.setRowFilter(null);\r\n                    } else {\r\n                        RowFilter rowFilter= RowFilter.regexFilter(textField.getText(),0);\r\n                        sorter.setRowFilter(rowFilter);\r\n                    }\r\n                }else if(selected.equals(\"Name\")){\r\n                    if (str.length() == 0) {\r\n                        sorter.setRowFilter(null);\r\n                    } else {\r\n                        RowFilter rowFilter= RowFilter.regexFilter(textField.getText(),1);\r\n                        sorter.setRowFilter(rowFilter);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        back=new JButton(\"Back\");\r\n        back.setBackground(new Color(40,40,40));\r\n        back.setForeground(Color.WHITE);\r\n\r\n        back.setFocusPainted(false);\r\n        back.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        back.addMouseListener(new java.awt.event.MouseAdapter() {\r\n            public void mouseEntered(java.awt.event.MouseEvent evt) {\r\n                back.setBackground(new Color(60,60,60));\r\n            }\r\n\r\n            public void mouseExited(java.awt.event.MouseEvent evt) {\r\n                back.setBackground(new Color(40,40,40));\r\n            }\r\n        });\r\n\r\n        back.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if(e.getSource()==back)\r\n                {\r\n                    dispose();\r\n                    Admin n=new Admin();\r\n                    n.setVisible(true);\r\n                }\r\n\r\n            }\r\n        });\r\n        back.setBounds(10,10,80,20);\r\n        p1=new JPanel(null){\r\n            private BufferedImage backgroundImage;\r\n\r\n            {\r\n                try {\r\n\r\n                    backgroundImage = ImageIO.read(new File(\"C:/Users/mekon/IdeaProjects/SupermarketManagementSystem/greyImage.jpeg\"));\r\n\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n\r\n            protected void paintComponent(Graphics g) {\r\n                super.paintComponent(g);\r\n\r\n                if (backgroundImage != null) {\r\n                    g.drawImage(backgroundImage, 0, 0, getWidth(), getHeight(), null);\r\n                }\r\n            }\r\n        };\r\n\r\n        p2=new JPanel(){\r\n            private BufferedImage backgroundImage;\r\n\r\n            {\r\n                try {\r\n\r\n                    backgroundImage = ImageIO.read(new File(\"C:/Users/mekon/IdeaProjects/SupermarketManagementSystem/greyImage.jpeg\"));\r\n\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n\r\n            protected void paintComponent(Graphics g) {\r\n                super.paintComponent(g);\r\n\r\n                if (backgroundImage != null) {\r\n                    g.drawImage(backgroundImage, 0, 0, getWidth(), getHeight(), null);\r\n                }\r\n            }\r\n        };\r\n        p2.setPreferredSize(new Dimension(600,400));\r\n\r\n        p1.setPreferredSize(new Dimension(600,50));\r\n\r\n\r\n\r\n        scroll.setBounds(450,65,500,150);\r\n        scroll.setBackground(Color.WHITE);\r\n        setLayout(new BoxLayout(getContentPane(), BoxLayout.Y_AXIS));\r\n\r\n\r\n        p1.add(back);\r\n        p1.add(Cb);\r\n        p1.add(textField);\r\n        p2.add(scroll);\r\n        Inv.add(p1);\r\n        Inv.add(p2);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/inventory/Inventory.java b/src/inventory/Inventory.java
--- a/src/inventory/Inventory.java	(revision 958bd6a04260d5febec95c0cd128fc39e460356e)
+++ b/src/inventory/Inventory.java	(date 1694553770972)
@@ -30,7 +30,7 @@
 
     JComboBox Cb;
     JTable T;
-    JButton back;
+    JButton back,add,remove;
     JScrollPane scroll;
     String[] options= {"ID","Name"};
     JPanel p1,p2;
@@ -150,6 +150,72 @@
             }
         });
         back.setBounds(10,10,80,20);
+
+        add=new JButton("Add");
+        add.setBackground(new Color(40,40,40));
+        add.setForeground(Color.WHITE);
+
+        add.setFocusPainted(false);
+        add.setFont(new Font("Arial", Font.BOLD, 16));
+
+        add.addMouseListener(new java.awt.event.MouseAdapter() {
+            public void mouseEntered(java.awt.event.MouseEvent evt) {
+                add.setBackground(new Color(60,60,60));
+            }
+
+            public void mouseExited(java.awt.event.MouseEvent evt) {
+                add.setBackground(new Color(40,40,40));
+            }
+        });
+
+        add.addActionListener(new ActionListener() {
+            @Override
+            public void actionPerformed(ActionEvent e) {
+                if(e.getSource()==add)
+                {
+                    dispose();
+                    Admin n=new Admin();
+                    n.setVisible(true);
+                }
+
+            }
+        });
+        add.setBounds(250,390,100,50);
+        //scroll.setBounds(50,15,700,350);
+
+        remove=new JButton("Remove");
+        remove.setBackground(new Color(40,40,40));
+        remove.setForeground(Color.WHITE);
+
+        remove.setFocusPainted(false);
+        remove.setFont(new Font("Arial", Font.BOLD, 16));
+
+        remove.addMouseListener(new java.awt.event.MouseAdapter() {
+            public void mouseEntered(java.awt.event.MouseEvent evt) {
+                remove.setBackground(new Color(60,60,60));
+            }
+
+            public void mouseExited(java.awt.event.MouseEvent evt) {
+                remove.setBackground(new Color(40,40,40));
+            }
+        });
+
+        remove.addActionListener(new ActionListener() {
+            @Override
+            public void actionPerformed(ActionEvent e) {
+                if(e.getSource()==remove)
+                {
+                    dispose();
+                    Admin n=new Admin();
+                    n.setVisible(true);
+                }
+
+            }
+        });
+        remove.setBounds(450,390,100,50);
+
+
+
         p1=new JPanel(null){
             private BufferedImage backgroundImage;
 
@@ -172,7 +238,7 @@
             }
         };
 
-        p2=new JPanel(){
+        p2=new JPanel(null){
             private BufferedImage backgroundImage;
 
             {
@@ -193,13 +259,14 @@
                 }
             }
         };
+
         p2.setPreferredSize(new Dimension(600,400));
 
         p1.setPreferredSize(new Dimension(600,50));
 
 
 
-        scroll.setBounds(450,65,500,150);
+        scroll.setBounds(50,15,700,350);
         scroll.setBackground(Color.WHITE);
         setLayout(new BoxLayout(getContentPane(), BoxLayout.Y_AXIS));
 
@@ -208,6 +275,8 @@
         p1.add(Cb);
         p1.add(textField);
         p2.add(scroll);
+        p2.add(add);
+        p2.add(remove);
         Inv.add(p1);
         Inv.add(p2);
     }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"d72dfc20-d9fd-433d-8297-8215fe9c5c62\" name=\"Changes\" comment=\"gui2 commit\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_9_12_2023_9_40_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_9_12_2023_9_40_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Admin.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/admin/Admin.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Login.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/login/Login.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/inventory/Inventory.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/inventory/Inventory.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_TAGS\">\r\n      <GitPushTagMode>\r\n        <option name=\"argument\" value=\"--tags\" />\r\n        <option name=\"title\" value=\"All\" />\r\n      </GitPushTagMode>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2VFRDXAfurToGERraEyCh7hpd24\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/mekon/IdeaProjects/supermarket&quot;,\r\n    &quot;onboarding.tips.debug.path&quot;: &quot;C:/Users/Nahom Mekonnen/IdeaProjects/SuperMarketManagementSystem/src/Main.java&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"d72dfc20-d9fd-433d-8297-8215fe9c5c62\" name=\"Changes\" comment=\"\" />\r\n      <created>1694429725009</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1694429725009</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"First Commit\">\r\n      <created>1694429925749</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694429925749</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Third Commit\">\r\n      <created>1694431359986</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694431359986</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Third Commit\">\r\n      <created>1694431632314</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694431632314</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Third Commit\">\r\n      <created>1694431708337</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694431708337</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Third Commit\">\r\n      <created>1694431859721</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694431859721</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Third Commit\">\r\n      <created>1694432185170</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694432185170</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Third Commit\">\r\n      <created>1694456574225</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694456574225</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Third Commit\">\r\n      <created>1694458071694</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694458071694</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"gui commit\">\r\n      <created>1694502527439</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694502527439</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"gui2 commit\">\r\n      <created>1694502632773</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694502632773</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"gui2 commit\">\r\n      <created>1694506147571</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694506147571</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"gui2 commit\">\r\n      <created>1694547383643</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694547383643</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"gui2 commit\">\r\n      <created>1694547391394</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694547391394</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"gui2 commit\">\r\n      <created>1694547491807</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694547491807</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"15\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"First Commit\" />\r\n    <MESSAGE value=\"Third Commit\" />\r\n    <MESSAGE value=\"gui commit\" />\r\n    <MESSAGE value=\"gui2 commit\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"gui2 commit\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"com.microsoft.sqlserver.jdbc.SQLServerException\" package=\"com.microsoft.sqlserver.jdbc\" />\r\n          <option name=\"timeStamp\" value=\"2\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 958bd6a04260d5febec95c0cd128fc39e460356e)
+++ b/.idea/workspace.xml	(date 1694553725404)
@@ -5,11 +5,8 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="d72dfc20-d9fd-433d-8297-8215fe9c5c62" name="Changes" comment="gui2 commit">
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_9_12_2023_9_40_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_9_12_2023_9_40_PM__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Admin.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/admin/Admin.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Login.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/login/Login.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/employee/Employee.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/employee/Employee.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/inventory/Inventory.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/inventory/Inventory.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -166,7 +163,14 @@
       <option name="project" value="LOCAL" />
       <updated>1694547491807</updated>
     </task>
-    <option name="localTasksCounter" value="15" />
+    <task id="LOCAL-00015" summary="gui2 commit">
+      <created>1694549839904</created>
+      <option name="number" value="00015" />
+      <option name="presentableId" value="LOCAL-00015" />
+      <option name="project" value="LOCAL" />
+      <updated>1694549839904</updated>
+    </task>
+    <option name="localTasksCounter" value="16" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
